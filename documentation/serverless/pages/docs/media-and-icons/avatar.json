{"pageProps":{"mdxSource":{"compiledSource":"var c=Object.defineProperty,d=Object.defineProperties;var h=Object.getOwnPropertyDescriptors;var o=Object.getOwnPropertySymbols;var p=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;var s=(e,r,t)=>r in e?c(e,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[r]=t,a=(e,r)=>{for(var t in r||(r={}))p.call(r,t)&&s(e,t,r[t]);if(o)for(var t of o(r))i.call(r,t)&&s(e,t,r[t]);return e},m=(e,r)=>d(e,h(r));var l=(e,r)=>{var t={};for(var n in e)p.call(e,n)&&r.indexOf(n)<0&&(t[n]=e[n]);if(e!=null&&o)for(var n of o(e))r.indexOf(n)<0&&i.call(e,n)&&(t[n]=e[n]);return t};const makeShortcode=e=>function(t){return console.warn(\"Component \"+e+\" was not imported, exported, or provided by MDXProvider as global scope\"),mdx(\"div\",a({},t))},PropsTable=makeShortcode(\"PropsTable\"),layoutProps={},MDXLayout=\"wrapper\";function MDXContent(t){var n=t,{components:e}=n,r=l(n,[\"components\"]);return mdx(MDXLayout,m(a(a({},layoutProps),r),{components:e,mdxType:\"MDXLayout\"}),mdx(\"p\",null,\"The \",mdx(\"inlineCode\",{parentName:\"p\"},\"Avatar\"),` component is used to represent a user, and displays the profile\npicture, initials or fallback icon.`),mdx(\"h2\",a({},{id:\"import\"}),\"Import\"),mdx(\"p\",null,\"Chakra UI exports 3 avatar-related components:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"Avatar\"),\": The image that represents the user.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"AvatarBadge\"),`: A wrapper that displays its content on the right corner of the\navatar.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"AvatarGroup\"),\": A wrapper to stack multiple Avatars together.\")),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-js\"}),`import { Avatar, AvatarBadge, AvatarGroup } from \"@chakra-ui/react\"\n`)),mdx(\"h2\",a({},{id:\"usage\"}),\"Usage\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-jsx\"}),`<Wrap>\n  <WrapItem>\n    <Avatar name=\"Dan Abrahmov\" src=\"\" />\n  </WrapItem>\n  <WrapItem>\n    <Avatar name=\"Kola Tioluwani\" src=\"\" />\n  </WrapItem>\n  <WrapItem>\n    <Avatar name=\"Kent Dodds\" src=\"\" />\n  </WrapItem>\n  <WrapItem>\n    <Avatar name=\"Ryan Florence\" src=\"\" />\n  </WrapItem>\n  <WrapItem>\n    <Avatar name=\"Prosper Otemuyiwa\" src=\"\" />\n  </WrapItem>\n  <WrapItem>\n    <Avatar name=\"Christian Nwamba\" src=\"\" />\n  </WrapItem>\n  <WrapItem>\n    <Avatar name=\"Segun Adebayo\" src=\"\" />\n  </WrapItem>\n</Wrap>\n`)),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-tsx\"}),`<Wrap>\n  <WrapItem>\n    <Avatar name=\"Dan Abrahmov\" src=\"\" />\n  </WrapItem>\n  <WrapItem>\n    <Avatar name=\"Kola Tioluwani\" src=\"\" />\n  </WrapItem>\n  <WrapItem>\n    <Avatar name=\"Kent Dodds\" src=\"\" />\n  </WrapItem>\n  <WrapItem>\n    <Avatar name=\"Ryan Florence\" src=\"\" />\n  </WrapItem>\n  <WrapItem>\n    <Avatar name=\"Prosper Otemuyiwa\" src=\"\" />\n  </WrapItem>\n  <WrapItem>\n    <Avatar name=\"Christian Nwamba\" src=\"\" />\n  </WrapItem>\n  <WrapItem>\n    <Avatar name=\"Segun Adebayo\" src=\"\" />\n  </WrapItem>\n</Wrap>\n`)),mdx(\"h3\",a({},{id:\"avatar-sizes\"}),\"Avatar Sizes\"),mdx(\"p\",null,\"The \",mdx(\"inlineCode\",{parentName:\"p\"},\"Avatar\"),\" component comes in 7 sizes.\"),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-jsx\"}),`<Wrap>\n  <WrapItem>\n    <Avatar size=\"2xs\" name=\"Dan Abrahmov\" src=\"h\" />\n  </WrapItem>\n  <WrapItem>\n    <Avatar size=\"xs\" name=\"Kola Tioluwani\" src=\"\" />{\" \"}\n  </WrapItem>\n  <WrapItem>\n    <Avatar size=\"sm\" name=\"Kent Dodds\" src=\"\" />{\" \"}\n  </WrapItem>\n  <WrapItem>\n    <Avatar size=\"md\" name=\"Ryan Florence\" src=\"\" />{\" \"}\n  </WrapItem>\n  <WrapItem>\n    <Avatar size=\"lg\" name=\"Prosper Otemuyiwa\" src=\"\" />{\" \"}\n  </WrapItem>\n  <WrapItem>\n    <Avatar size=\"xl\" name=\"Christian Nwamba\" src=\"\" />{\" \"}\n  </WrapItem>\n  <WrapItem>\n    <Avatar size=\"2xl\" name=\"Segun Adebayo\" src=\"\" />{\" \"}\n  </WrapItem>\n</Wrap>\n`)),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-tsx\"}),`<Wrap>\n  <WrapItem>\n    <Avatar size=\"2xs\" name=\"Dan Abrahmov\" src=\"h\" />\n  </WrapItem>\n  <WrapItem>\n    <Avatar size=\"xs\" name=\"Kola Tioluwani\" src=\"\" />{\" \"}\n  </WrapItem>\n  <WrapItem>\n    <Avatar size=\"sm\" name=\"Kent Dodds\" src=\"\" />{\" \"}\n  </WrapItem>\n  <WrapItem>\n    <Avatar size=\"md\" name=\"Ryan Florence\" src=\"\" />{\" \"}\n  </WrapItem>\n  <WrapItem>\n    <Avatar size=\"lg\" name=\"Prosper Otemuyiwa\" src=\"\" />{\" \"}\n  </WrapItem>\n  <WrapItem>\n    <Avatar size=\"xl\" name=\"Christian Nwamba\" src=\"\" />{\" \"}\n  </WrapItem>\n  <WrapItem>\n    <Avatar size=\"2xl\" name=\"Segun Adebayo\" src=\"\" />{\" \"}\n  </WrapItem>\n</Wrap>\n`)),mdx(\"h3\",a({},{id:\"avatar-fallbacks\"}),\"Avatar Fallbacks\"),mdx(\"p\",null,\"If there is an error loading the \",mdx(\"inlineCode\",{parentName:\"p\"},\"src\"),\" of the avatar, there are 2 fallbacks:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"If there's a \",mdx(\"inlineCode\",{parentName:\"li\"},\"name\"),` prop, we use it to generate the initials and a random,\naccessible background color.`),mdx(\"li\",{parentName:\"ul\"},\"If there's no \",mdx(\"inlineCode\",{parentName:\"li\"},\"name\"),\" prop, we use a default avatar.\")),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-jsx\"}),`<Stack direction=\"row\">\n  <Avatar name=\"Oshigaki Kisame\" src=\"https://bit.ly/broken-link\" />\n  <Avatar name=\"Sasuke Uchiha\" src=\"https://bit.ly/broken-link\" />\n  <Avatar src=\"https://bit.ly/broken-link\" />\n</Stack>\n`)),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-tsx\"}),`<Stack direction=\"row\">\n  <Avatar name=\"Oshigaki Kisame\" src=\"https://bit.ly/broken-link\" />\n  <Avatar name=\"Sasuke Uchiha\" src=\"https://bit.ly/broken-link\" />\n  <Avatar src=\"https://bit.ly/broken-link\" />\n</Stack>\n`)),mdx(\"h3\",a({},{id:\"customize-the-fallback-avatar\"}),\"Customize the fallback avatar\"),mdx(\"p\",null,`You can customize the background color and icon of the fallback avatar icon to\nmatch your design requirements.`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"To update the background, pass the usual \",mdx(\"inlineCode\",{parentName:\"li\"},\"bg\"),\" prop.\"),mdx(\"li\",{parentName:\"ul\"},\"To update the icon svg, pass the \",mdx(\"inlineCode\",{parentName:\"li\"},\"icon\"),\" prop.\")),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-jsx\"}),`<AvatarGroup spacing=\"1rem\">\n  <Avatar bg=\"red.500\" icon={<AiOutlineUser fontSize=\"1.5rem\" />} />\n  <Avatar bg=\"teal.500\" />\n</AvatarGroup>\n`)),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-tsx\"}),`<AvatarGroup spacing=\"1rem\">\n  <Avatar bg=\"red.500\" icon={<AiOutlineUser fontSize=\"1.5rem\" />} />\n  <Avatar bg=\"teal.500\" />\n</AvatarGroup>\n`)),mdx(\"h3\",a({},{id:\"avatar-with-badge\"}),\"Avatar with badge\"),mdx(\"p\",null,`In some products, you might need to show a badge on the right corner of the\navatar. We call this a `,mdx(\"strong\",{parentName:\"p\"},\"badge\"),`. Here's an example that shows if the user is\nonline:`),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-jsx\"}),`<Stack direction=\"row\" spacing={4}>\n  <Avatar>\n    <AvatarBadge boxSize=\"1.25em\" bg=\"green.500\" />\n  </Avatar>\n\n  {/* You can also change the borderColor and bg of the badge */}\n  <Avatar>\n    <AvatarBadge borderColor=\"papayawhip\" bg=\"tomato\" boxSize=\"1.25em\" />\n  </Avatar>\n</Stack>\n`)),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-tsx\"}),`<Stack direction=\"row\" spacing={4}>\n  <Avatar>\n    <AvatarBadge boxSize=\"1.25em\" bg=\"green.500\" />\n  </Avatar>\n\n  {/* You can also change the borderColor and bg of the badge */}\n  <Avatar>\n    <AvatarBadge borderColor=\"papayawhip\" bg=\"tomato\" boxSize=\"1.25em\" />\n  </Avatar>\n</Stack>\n`)),mdx(\"blockquote\",null,mdx(\"p\",{parentName:\"blockquote\"},\"Note the use of \",mdx(\"inlineCode\",{parentName:\"p\"},\"em\"),\" for the size of the \",mdx(\"inlineCode\",{parentName:\"p\"},\"AvatarBadge\"),`. This is useful to size\nthe badge relative to the avatar font size.`)),mdx(\"h3\",a({},{id:\"avatargroup\"}),\"AvatarGroup\"),mdx(\"p\",null,\"In some cases, you might need to stack avatars as a group. Use the \",mdx(\"inlineCode\",{parentName:\"p\"},\"AvatarGroup\"),`\ncomponent.`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"To limit the amount of avatars to show, use the \",mdx(\"inlineCode\",{parentName:\"li\"},\"max\"),` prop. It'll truncate the\navatars and show a \"+X\" label (where X is the remaining avatars).`),mdx(\"li\",{parentName:\"ul\"},\"To size all the avatars equally, pass the \",mdx(\"inlineCode\",{parentName:\"li\"},\"size\"),\" prop.\"),mdx(\"li\",{parentName:\"ul\"},\"To adjust the spacing between the avatars, pass the \",mdx(\"inlineCode\",{parentName:\"li\"},\"spacing\"),\" prop.\")),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-jsx\"}),`<AvatarGroup size=\"md\" max={2}>\n  <Avatar name=\"Ryan Florence\" src=\"\" />\n  <Avatar name=\"Segun Adebayo\" src=\"\" />\n  <Avatar name=\"Kent Dodds\" src=\"\" />\n  <Avatar name=\"Prosper Otemuyiwa\" src=\"\" />\n  <Avatar name=\"Christian Nwamba\" src=\"\" />\n</AvatarGroup>\n`)),mdx(\"pre\",null,mdx(\"code\",a({parentName:\"pre\"},{className:\"language-tsx\"}),`<AvatarGroup size=\"md\" max={2}>\n  <Avatar name=\"Ryan Florence\" src=\"\" />\n  <Avatar name=\"Segun Adebayo\" src=\"\" />\n  <Avatar name=\"Kent Dodds\" src=\"\" />\n  <Avatar name=\"Prosper Otemuyiwa\" src=\"\" />\n  <Avatar name=\"Christian Nwamba\" src=\"\" />\n</AvatarGroup>\n`)),mdx(\"h3\",a({},{id:\"changing-the-initials-logic\"}),\"Changing the initials logic\"),mdx(\"p\",null,\"Added \",mdx(\"inlineCode\",{parentName:\"p\"},\"getInitials\"),` prop to allow users to manage how initials are generated\nfrom name. By default we merge the first characters of each word in the `,mdx(\"inlineCode\",{parentName:\"p\"},\"name\"),`\nprop.`),mdx(\"h2\",a({},{id:\"props\"}),\"Props\"),mdx(\"h3\",a({},{id:\"avatar-props\"}),\"Avatar Props\"),mdx(\"p\",null,mdx(\"inlineCode\",{parentName:\"p\"},\"Avatar\"),\" composes the \",mdx(\"inlineCode\",{parentName:\"p\"},\"Box\"),` component so you can pass all its props. These are\nprops specific to the `,mdx(\"inlineCode\",{parentName:\"p\"},\"Avatar\"),\" component:\"),mdx(PropsTable,{of:\"Avatar\",mdxType:\"PropsTable\"}),mdx(\"h3\",a({},{id:\"avatar-group-props\"}),\"Avatar Group Props\"),mdx(\"p\",null,mdx(\"inlineCode\",{parentName:\"p\"},\"AvatarGroup\"),\" composes the \",mdx(\"inlineCode\",{parentName:\"p\"},\"Box\"),` component so you can pass all its props. These\nare props specific to the `,mdx(\"inlineCode\",{parentName:\"p\"},\"AvatarGroup\"),\" component:\"),mdx(PropsTable,{of:\"AvatarGroup\",mdxType:\"PropsTable\"}))}MDXContent.isMDXComponent=!0;\n","scope":{"title":"Avatar","package":"@chakra-ui/avatar","image":"components/avatar.svg","description":"The Avatar component is used to represent user, and displays the profile picture, initials or fallback icon."}},"frontMatter":{"excerpt":"The Avatar component is used to represent a user, and displays the profile","readTimeMinutes":4,"mdxContent":"---\ntitle: Avatar\npackage: \"@chakra-ui/avatar\"\nimage: \"components/avatar.svg\"\ndescription:\n  The Avatar component is used to represent user, and displays the profile\n  picture, initials or fallback icon.\n---\n\nThe `Avatar` component is used to represent a user, and displays the profile\npicture, initials or fallback icon.\n\n## Import\n\nChakra UI exports 3 avatar-related components:\n\n- `Avatar`: The image that represents the user.\n- `AvatarBadge`: A wrapper that displays its content on the right corner of the\n  avatar.\n- `AvatarGroup`: A wrapper to stack multiple Avatars together.\n\n```js\nimport { Avatar, AvatarBadge, AvatarGroup } from \"@chakra-ui/react\"\n```\n\n## Usage\n\n```jsx\n<Wrap>\n  <WrapItem>\n    <Avatar name=\"Dan Abrahmov\" src=\"\" />\n  </WrapItem>\n  <WrapItem>\n    <Avatar name=\"Kola Tioluwani\" src=\"\" />\n  </WrapItem>\n  <WrapItem>\n    <Avatar name=\"Kent Dodds\" src=\"\" />\n  </WrapItem>\n  <WrapItem>\n    <Avatar name=\"Ryan Florence\" src=\"\" />\n  </WrapItem>\n  <WrapItem>\n    <Avatar name=\"Prosper Otemuyiwa\" src=\"\" />\n  </WrapItem>\n  <WrapItem>\n    <Avatar name=\"Christian Nwamba\" src=\"\" />\n  </WrapItem>\n  <WrapItem>\n    <Avatar name=\"Segun Adebayo\" src=\"\" />\n  </WrapItem>\n</Wrap>\n```\n\n```tsx\n<Wrap>\n  <WrapItem>\n    <Avatar name=\"Dan Abrahmov\" src=\"\" />\n  </WrapItem>\n  <WrapItem>\n    <Avatar name=\"Kola Tioluwani\" src=\"\" />\n  </WrapItem>\n  <WrapItem>\n    <Avatar name=\"Kent Dodds\" src=\"\" />\n  </WrapItem>\n  <WrapItem>\n    <Avatar name=\"Ryan Florence\" src=\"\" />\n  </WrapItem>\n  <WrapItem>\n    <Avatar name=\"Prosper Otemuyiwa\" src=\"\" />\n  </WrapItem>\n  <WrapItem>\n    <Avatar name=\"Christian Nwamba\" src=\"\" />\n  </WrapItem>\n  <WrapItem>\n    <Avatar name=\"Segun Adebayo\" src=\"\" />\n  </WrapItem>\n</Wrap>\n```\n\n### Avatar Sizes\n\nThe `Avatar` component comes in 7 sizes.\n\n```jsx\n<Wrap>\n  <WrapItem>\n    <Avatar size=\"2xs\" name=\"Dan Abrahmov\" src=\"h\" />\n  </WrapItem>\n  <WrapItem>\n    <Avatar size=\"xs\" name=\"Kola Tioluwani\" src=\"\" />{\" \"}\n  </WrapItem>\n  <WrapItem>\n    <Avatar size=\"sm\" name=\"Kent Dodds\" src=\"\" />{\" \"}\n  </WrapItem>\n  <WrapItem>\n    <Avatar size=\"md\" name=\"Ryan Florence\" src=\"\" />{\" \"}\n  </WrapItem>\n  <WrapItem>\n    <Avatar size=\"lg\" name=\"Prosper Otemuyiwa\" src=\"\" />{\" \"}\n  </WrapItem>\n  <WrapItem>\n    <Avatar size=\"xl\" name=\"Christian Nwamba\" src=\"\" />{\" \"}\n  </WrapItem>\n  <WrapItem>\n    <Avatar size=\"2xl\" name=\"Segun Adebayo\" src=\"\" />{\" \"}\n  </WrapItem>\n</Wrap>\n```\n\n```tsx\n<Wrap>\n  <WrapItem>\n    <Avatar size=\"2xs\" name=\"Dan Abrahmov\" src=\"h\" />\n  </WrapItem>\n  <WrapItem>\n    <Avatar size=\"xs\" name=\"Kola Tioluwani\" src=\"\" />{\" \"}\n  </WrapItem>\n  <WrapItem>\n    <Avatar size=\"sm\" name=\"Kent Dodds\" src=\"\" />{\" \"}\n  </WrapItem>\n  <WrapItem>\n    <Avatar size=\"md\" name=\"Ryan Florence\" src=\"\" />{\" \"}\n  </WrapItem>\n  <WrapItem>\n    <Avatar size=\"lg\" name=\"Prosper Otemuyiwa\" src=\"\" />{\" \"}\n  </WrapItem>\n  <WrapItem>\n    <Avatar size=\"xl\" name=\"Christian Nwamba\" src=\"\" />{\" \"}\n  </WrapItem>\n  <WrapItem>\n    <Avatar size=\"2xl\" name=\"Segun Adebayo\" src=\"\" />{\" \"}\n  </WrapItem>\n</Wrap>\n```\n\n### Avatar Fallbacks\n\nIf there is an error loading the `src` of the avatar, there are 2 fallbacks:\n\n- If there's a `name` prop, we use it to generate the initials and a random,\n  accessible background color.\n- If there's no `name` prop, we use a default avatar.\n\n```jsx\n<Stack direction=\"row\">\n  <Avatar name=\"Oshigaki Kisame\" src=\"https://bit.ly/broken-link\" />\n  <Avatar name=\"Sasuke Uchiha\" src=\"https://bit.ly/broken-link\" />\n  <Avatar src=\"https://bit.ly/broken-link\" />\n</Stack>\n```\n\n```tsx\n<Stack direction=\"row\">\n  <Avatar name=\"Oshigaki Kisame\" src=\"https://bit.ly/broken-link\" />\n  <Avatar name=\"Sasuke Uchiha\" src=\"https://bit.ly/broken-link\" />\n  <Avatar src=\"https://bit.ly/broken-link\" />\n</Stack>\n```\n\n### Customize the fallback avatar\n\nYou can customize the background color and icon of the fallback avatar icon to\nmatch your design requirements.\n\n- To update the background, pass the usual `bg` prop.\n- To update the icon svg, pass the `icon` prop.\n\n```jsx\n<AvatarGroup spacing=\"1rem\">\n  <Avatar bg=\"red.500\" icon={<AiOutlineUser fontSize=\"1.5rem\" />} />\n  <Avatar bg=\"teal.500\" />\n</AvatarGroup>\n```\n\n```tsx\n<AvatarGroup spacing=\"1rem\">\n  <Avatar bg=\"red.500\" icon={<AiOutlineUser fontSize=\"1.5rem\" />} />\n  <Avatar bg=\"teal.500\" />\n</AvatarGroup>\n```\n\n### Avatar with badge\n\nIn some products, you might need to show a badge on the right corner of the\navatar. We call this a **badge**. Here's an example that shows if the user is\nonline:\n\n```jsx\n<Stack direction=\"row\" spacing={4}>\n  <Avatar>\n    <AvatarBadge boxSize=\"1.25em\" bg=\"green.500\" />\n  </Avatar>\n\n  {/* You can also change the borderColor and bg of the badge */}\n  <Avatar>\n    <AvatarBadge borderColor=\"papayawhip\" bg=\"tomato\" boxSize=\"1.25em\" />\n  </Avatar>\n</Stack>\n```\n\n```tsx\n<Stack direction=\"row\" spacing={4}>\n  <Avatar>\n    <AvatarBadge boxSize=\"1.25em\" bg=\"green.500\" />\n  </Avatar>\n\n  {/* You can also change the borderColor and bg of the badge */}\n  <Avatar>\n    <AvatarBadge borderColor=\"papayawhip\" bg=\"tomato\" boxSize=\"1.25em\" />\n  </Avatar>\n</Stack>\n```\n\n> Note the use of `em` for the size of the `AvatarBadge`. This is useful to size\n> the badge relative to the avatar font size.\n\n### AvatarGroup\n\nIn some cases, you might need to stack avatars as a group. Use the `AvatarGroup`\ncomponent.\n\n- To limit the amount of avatars to show, use the `max` prop. It'll truncate the\n  avatars and show a \"+X\" label (where X is the remaining avatars).\n- To size all the avatars equally, pass the `size` prop.\n- To adjust the spacing between the avatars, pass the `spacing` prop.\n\n```jsx\n<AvatarGroup size=\"md\" max={2}>\n  <Avatar name=\"Ryan Florence\" src=\"\" />\n  <Avatar name=\"Segun Adebayo\" src=\"\" />\n  <Avatar name=\"Kent Dodds\" src=\"\" />\n  <Avatar name=\"Prosper Otemuyiwa\" src=\"\" />\n  <Avatar name=\"Christian Nwamba\" src=\"\" />\n</AvatarGroup>\n```\n\n```tsx\n<AvatarGroup size=\"md\" max={2}>\n  <Avatar name=\"Ryan Florence\" src=\"\" />\n  <Avatar name=\"Segun Adebayo\" src=\"\" />\n  <Avatar name=\"Kent Dodds\" src=\"\" />\n  <Avatar name=\"Prosper Otemuyiwa\" src=\"\" />\n  <Avatar name=\"Christian Nwamba\" src=\"\" />\n</AvatarGroup>\n```\n\n### Changing the initials logic\n\nAdded `getInitials` prop to allow users to manage how initials are generated\nfrom name. By default we merge the first characters of each word in the `name`\nprop.\n\n## Props\n\n### Avatar Props\n\n`Avatar` composes the `Box` component so you can pass all its props. These are\nprops specific to the `Avatar` component:\n\n<PropsTable of=\"Avatar\" />\n\n### Avatar Group Props\n\n`AvatarGroup` composes the `Box` component so you can pass all its props. These\nare props specific to the `AvatarGroup` component:\n\n<PropsTable of=\"AvatarGroup\" />\n","title":"Avatar","package":"@chakra-ui/avatar","image":"components/avatar.svg","description":"The Avatar component is used to represent user, and displays the profile picture, initials or fallback icon.","slug":"/docs/media-and-icons/avatar","lastEdited":{"date":"August 26, 2021","author":"VladMihalache"},"headings":[{"text":"Import","id":"import","level":"h2"},{"text":"Usage","id":"usage","level":"h2"},{"text":"Avatar Sizes","id":"avatar-sizes","level":"h3"},{"text":"Avatar Fallbacks","id":"avatar-fallbacks","level":"h3"},{"text":"Customize the fallback avatar","id":"customize-the-fallback-avatar","level":"h3"},{"text":"Avatar with badge","id":"avatar-with-badge","level":"h3"},{"text":"AvatarGroup","id":"avatargroup","level":"h3"},{"text":"Changing the initials logic","id":"changing-the-initials-logic","level":"h3"},{"text":"Props","id":"props","level":"h2"},{"text":"Avatar Props","id":"avatar-props","level":"h3"},{"text":"Avatar Group Props","id":"avatar-group-props","level":"h3"}],"editUrl":"https://github.com/creativetimofficial/purity-ui-dashboard/edit/main/website/pages/docs/media-and-icons/avatar.mdx","author":null,"tags":[]},"_superjson":{"values":{"frontMatter.author":["undefined"]}}},"__N_SSG":true}