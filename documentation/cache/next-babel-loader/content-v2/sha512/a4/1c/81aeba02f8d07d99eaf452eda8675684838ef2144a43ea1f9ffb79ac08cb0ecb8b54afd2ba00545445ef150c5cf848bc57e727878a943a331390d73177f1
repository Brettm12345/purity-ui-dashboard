{"ast":null,"code":"import { withSuperJSONPage as _withSuperJSONPage } from \"babel-plugin-superjson-next/tools\";\nvar __jsx = React.createElement;\nimport { Box, Heading, SimpleGrid, Stack, Text } from \"@chakra-ui/react\";\nimport PageContainer from \"components/page-container\";\nimport ResourceCard from \"components/resource-card\";\nimport Sidebar from \"components/sidebar/sidebar\";\nimport resources from \"configs/resources.json\";\nimport { getRoutes } from \"layouts/mdx\";\nimport groupBy from \"lodash/groupBy\";\nimport * as React from \"react\";\nimport { FaMicrophone, FaPenSquare, FaVideo } from \"react-icons/fa\";\n\nfunction Resources() {\n  /**\n   * Re-use the docs sidebar so it's easier for a visitors\n   * to reference components mentioned in the resource blog/video.\n   */\n  const routes = getRoutes(\"/docs/\");\n  const data = resources.data;\n  const groups = groupBy(data, \"type\");\n  return __jsx(PageContainer, {\n    sidebar: __jsx(Sidebar, {\n      routes: routes\n    }),\n    frontmatter: {\n      title: \"Community Resources\",\n      description: \"A rich compilation of technical descriptions and detailed information of how Chakra UI works.\"\n    }\n  }, __jsx(Text, {\n    mt: \"2\"\n  }, \"A rich compilation of technical descriptions and detailed information of how Chakra UI works.\"), __jsx(Stack, {\n    spacing: \"12\"\n  }, __jsx(ResourceSection, {\n    title: \"Talks\",\n    resources: groups.talk,\n    icon: FaMicrophone\n  }), __jsx(ResourceSection, {\n    title: \"Videos\",\n    resources: groups.video,\n    icon: FaVideo\n  }), __jsx(ResourceSection, {\n    title: \"Blogs\",\n    resources: groups.blog,\n    icon: FaPenSquare\n  })));\n}\n\nexport default _withSuperJSONPage(Resources);\n\nfunction ResourceSection(props) {\n  const {\n    icon,\n    title,\n    resources\n  } = props;\n  return __jsx(Box, {\n    as: \"section\",\n    mt: \"12\"\n  }, __jsx(Heading, {\n    as: \"h2\",\n    size: \"md\"\n  }, __jsx(Box, {\n    as: icon,\n    display: \"inline-block\",\n    verticalAlign: \"middle\",\n    color: \"teal.500\",\n    mr: \"3\"\n  }), __jsx(\"span\", null, title)), __jsx(SimpleGrid, {\n    mt: 8,\n    columns: [1, 2],\n    spacing: 8\n  }, resources.map((item, index) => __jsx(ResourceCard, {\n    key: index,\n    data: item\n  }))));\n}","map":null,"metadata":{},"sourceType":"module"}