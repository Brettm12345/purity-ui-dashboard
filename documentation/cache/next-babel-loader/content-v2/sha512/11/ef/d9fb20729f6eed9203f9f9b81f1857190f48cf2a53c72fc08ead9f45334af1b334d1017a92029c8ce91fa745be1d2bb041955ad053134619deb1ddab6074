{"ast":null,"code":"var _jsxFileName = \"/Users/vladmihalache/Documents/GitHub/chakra-ui/website/src/components/resource-card.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { Badge, Box, Heading, Link, Text, useColorModeValue, Wrap, WrapItem } from \"@chakra-ui/react\";\nimport * as React from \"react\";\n\nfunction ResourceCard(props) {\n  const {\n    data\n  } = props,\n        rest = _objectWithoutProperties(props, [\"data\"]);\n\n  const {\n    heading,\n    author,\n    description,\n    url,\n    tags\n  } = data;\n  return __jsx(Box, _extends({}, rest, {\n    maxW: \"360px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }), __jsx(Wrap, {\n    className: \"algolia-exclude\",\n    spacing: \"3\",\n    mb: \"2\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, tags === null || tags === void 0 ? void 0 : tags.map((tag, index) => __jsx(WrapItem, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, __jsx(Badge, {\n    as: \"a\",\n    rel: \"tag\",\n    color: useColorModeValue(\"teal.600\", \"teal.400\"),\n    textTransform: \"uppercase\",\n    fontSize: \"xs\",\n    fontWeight: \"bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, tag)))), __jsx(Heading, {\n    as: \"h3\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, __jsx(Link, {\n    isExternal: true,\n    href: url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, heading))), __jsx(Text, {\n    fontSize: \"sm\",\n    color: \"gray.500\",\n    mt: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, \"by \", author), __jsx(Text, {\n    lineHeight: \"tall\",\n    py: 2,\n    opacity: 0.8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, description));\n}\n\nexport default ResourceCard;","map":{"version":3,"sources":["/Users/vladmihalache/Documents/GitHub/chakra-ui/website/src/components/resource-card.tsx"],"names":["Badge","Box","Heading","Link","Text","useColorModeValue","Wrap","WrapItem","React","ResourceCard","props","data","rest","heading","author","description","url","tags","map","tag","index"],"mappings":";;;;;;;;;AAAA,SACEA,KADF,EAEEC,GAFF,EAIEC,OAJF,EAKEC,IALF,EAMEC,IANF,EAOEC,iBAPF,EAQEC,IARF,EASEC,QATF,QAUO,kBAVP;AAWA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AAeA,SAASC,YAAT,CAAsBC,KAAtB,EAAgD;AAC9C,QAAM;AAAEC,IAAAA;AAAF,MAAoBD,KAA1B;AAAA,QAAiBE,IAAjB,4BAA0BF,KAA1B;;AACA,QAAM;AAAEG,IAAAA,OAAF;AAAWC,IAAAA,MAAX;AAAmBC,IAAAA,WAAnB;AAAgCC,IAAAA,GAAhC;AAAqCC,IAAAA;AAArC,MAA8CN,IAApD;AAEA,SACE,MAAC,GAAD,eAASC,IAAT;AAAe,IAAA,IAAI,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,MAAC,IAAD;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAkC,IAAA,OAAO,EAAC,GAA1C;AAA8C,IAAA,EAAE,EAAC,GAAjD;AAAqD,IAAA,KAAK,EAAC,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGK,IADH,aACGA,IADH,uBACGA,IAAI,CAAEC,GAAN,CAAU,CAACC,GAAD,EAAMC,KAAN,KACT,MAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AACE,IAAA,EAAE,EAAC,GADL;AAEE,IAAA,GAAG,EAAC,KAFN;AAGE,IAAA,KAAK,EAAEf,iBAAiB,CAAC,UAAD,EAAa,UAAb,CAH1B;AAIE,IAAA,aAAa,EAAC,WAJhB;AAKE,IAAA,QAAQ,EAAC,IALX;AAME,IAAA,UAAU,EAAC,MANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGc,GARH,CADF,CADD,CADH,CADF,EAkBE,MAAC,OAAD;AAAS,IAAA,EAAE,EAAC,IAAZ;AAAiB,IAAA,IAAI,EAAC,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,UAAU,MAAhB;AAAiB,IAAA,IAAI,EAAEH,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BH,OAA3B,CADF,CADF,CAlBF,EAuBE,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAC,IAAf;AAAoB,IAAA,KAAK,EAAC,UAA1B;AAAqC,IAAA,EAAE,EAAC,GAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACMC,MADN,CAvBF,EA0BE,MAAC,IAAD;AAAM,IAAA,UAAU,EAAC,MAAjB;AAAwB,IAAA,EAAE,EAAE,CAA5B;AAA+B,IAAA,OAAO,EAAE,GAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,WADH,CA1BF,CADF;AAgCD;;AAED,eAAeN,YAAf","sourcesContent":["import {\n  Badge,\n  Box,\n  BoxProps,\n  Heading,\n  Link,\n  Text,\n  useColorModeValue,\n  Wrap,\n  WrapItem,\n} from \"@chakra-ui/react\"\nimport * as React from \"react\"\n\nexport interface Resource {\n  heading: string\n  type: \"blog\" | \"talk\" | \"video\"\n  description: string\n  url: string\n  author: string\n  tags?: string[]\n}\n\ninterface ResourceCardProps extends BoxProps {\n  data: Resource\n}\n\nfunction ResourceCard(props: ResourceCardProps) {\n  const { data, ...rest } = props\n  const { heading, author, description, url, tags } = data\n\n  return (\n    <Box {...rest} maxW=\"360px\">\n      <Wrap className=\"algolia-exclude\" spacing=\"3\" mb=\"2\" align=\"center\">\n        {tags?.map((tag, index) => (\n          <WrapItem key={index}>\n            <Badge\n              as=\"a\"\n              rel=\"tag\"\n              color={useColorModeValue(\"teal.600\", \"teal.400\")}\n              textTransform=\"uppercase\"\n              fontSize=\"xs\"\n              fontWeight=\"bold\"\n            >\n              {tag}\n            </Badge>\n          </WrapItem>\n        ))}\n      </Wrap>\n\n      <Heading as=\"h3\" size=\"sm\">\n        <Link isExternal href={url}>\n          <span className=\"content\">{heading}</span>\n        </Link>\n      </Heading>\n      <Text fontSize=\"sm\" color=\"gray.500\" mt=\"2\">\n        by {author}\n      </Text>\n      <Text lineHeight=\"tall\" py={2} opacity={0.8}>\n        {description}\n      </Text>\n    </Box>\n  )\n}\n\nexport default ResourceCard\n"]},"metadata":{},"sourceType":"module"}