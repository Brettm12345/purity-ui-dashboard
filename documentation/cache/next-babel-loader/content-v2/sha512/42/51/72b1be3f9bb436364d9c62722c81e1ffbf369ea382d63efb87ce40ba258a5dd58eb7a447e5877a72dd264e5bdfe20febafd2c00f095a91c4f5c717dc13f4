{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { Select, useColorModeValue } from \"@chakra-ui/react\";\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\nimport pkgJSON from \"@chakra-ui/react/package.json\";\nconst versions = [{\n  label: `v${pkgJSON.version}`,\n  url: \"https://chakra-ui.com\"\n}, {\n  label: \"v0.8.x\",\n  url: \"https://v0.chakra-ui.com\"\n}];\nconst v1Url = versions[0].url;\n\nfunction VersionSwitcher(props) {\n  const router = useRouter();\n  return __jsx(Select, _extends({\n    marginEnd: \"1rem\",\n    variant: \"unstyled\",\n    fontWeight: \"semibold\",\n    color: useColorModeValue(\"gray.600\", \"whiteAlpha.600\"),\n    value: v1Url,\n    \"aria-label\": \"Select the Chakra UI Docs version. You're currently viewing the version 1.0 docs\",\n    onChange: e => {\n      router.push(e.target.value);\n    }\n  }, props), versions.map(({\n    label,\n    url\n  }) => __jsx(\"option\", {\n    key: url,\n    value: url\n  }, label)));\n}\n\nexport default VersionSwitcher;","map":null,"metadata":{},"sourceType":"module"}