{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { Badge, Box, Heading, Link, Text, useColorModeValue, Wrap, WrapItem } from \"@chakra-ui/react\";\nimport * as React from \"react\";\n\nfunction ResourceCard(props) {\n  const {\n    data\n  } = props,\n        rest = _objectWithoutProperties(props, [\"data\"]);\n\n  const {\n    heading,\n    author,\n    description,\n    url,\n    tags\n  } = data;\n  return __jsx(Box, _extends({}, rest, {\n    maxW: \"360px\"\n  }), __jsx(Wrap, {\n    className: \"algolia-exclude\",\n    spacing: \"3\",\n    mb: \"2\",\n    align: \"center\"\n  }, tags === null || tags === void 0 ? void 0 : tags.map((tag, index) => __jsx(WrapItem, {\n    key: index\n  }, __jsx(Badge, {\n    as: \"a\",\n    rel: \"tag\",\n    color: useColorModeValue(\"teal.600\", \"teal.400\"),\n    textTransform: \"uppercase\",\n    fontSize: \"xs\",\n    fontWeight: \"bold\"\n  }, tag)))), __jsx(Heading, {\n    as: \"h3\",\n    size: \"sm\"\n  }, __jsx(Link, {\n    isExternal: true,\n    href: url\n  }, __jsx(\"span\", {\n    className: \"content\"\n  }, heading))), __jsx(Text, {\n    fontSize: \"sm\",\n    color: \"gray.500\",\n    mt: \"2\"\n  }, \"by \", author), __jsx(Text, {\n    lineHeight: \"tall\",\n    py: 2,\n    opacity: 0.8\n  }, description));\n}\n\nexport default ResourceCard;","map":null,"metadata":{},"sourceType":"module"}