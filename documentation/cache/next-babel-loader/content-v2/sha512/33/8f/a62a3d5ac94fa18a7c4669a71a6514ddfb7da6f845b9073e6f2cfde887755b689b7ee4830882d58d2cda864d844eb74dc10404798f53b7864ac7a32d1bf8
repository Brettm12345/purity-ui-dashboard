{"ast":null,"code":"import { withSuperJSONPage as _withSuperJSONPage } from \"babel-plugin-superjson-next/tools\";\nimport { withSuperJSONProps as _withSuperJSONProps } from \"babel-plugin-superjson-next/tools\";\nvar _jsxFileName = \"/Users/vladmihalache/Documents/GitHub/chakra-ui/website/pages/changelog.tsx\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\nimport { MDXRemote } from \"next-mdx-remote\";\nimport { MDXComponents } from \"components/mdx-components\";\nimport Layout from \"layouts\";\nimport { loadMdx } from \"utils/load-mdx\";\n\nfunction Changelog({\n  mdxSource,\n  frontMatter\n}) {\n  return __jsx(Layout, {\n    frontMatter: frontMatter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, __jsx(MDXRemote, _extends({}, mdxSource, {\n    components: MDXComponents,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  })));\n}\n\nexport const getStaticProps = _withSuperJSONProps(async function getStaticProps() {\n  const changelogPath = [\"..\", \"CHANGELOG.md\"].join(\"/\");\n  const page = await loadMdx(changelogPath);\n\n  const {\n    mdxSource: processedMdxSource\n  } = page,\n        processedFrontmatter = _objectWithoutProperties(page, [\"mdxSource\"]);\n\n  return {\n    props: {\n      mdxSource: processedMdxSource,\n      frontMatter: processedFrontmatter\n    }\n  };\n}, []);\nexport default _withSuperJSONPage(Changelog);","map":{"version":3,"sources":["/Users/vladmihalache/Documents/GitHub/chakra-ui/website/pages/changelog.tsx"],"names":["React","MDXRemote","MDXComponents","Layout","loadMdx","Changelog","mdxSource","frontMatter","getStaticProps","changelogPath","join","page","processedMdxSource","processedFrontmatter","props"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,aAAT,QAA8B,2BAA9B;AAEA,OAAOC,MAAP,MAAmB,SAAnB;AACA,SAASC,OAAT,QAAwB,gBAAxB;;AAEA,SAASC,SAAT,CAAmB;AACjBC,EAAAA,SADiB;AAEjBC,EAAAA;AAFiB,CAAnB,EAGmD;AACjD,SACE,MAAC,MAAD;AAAQ,IAAA,WAAW,EAAEA,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eAAeD,SAAf;AAA0B,IAAA,UAAU,EAAEJ,aAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF;AAKD;;AAED,aAAsBM,cAAtB,sCAAsBA,cAAtB,GAAuC;AACrC,QAAMC,aAAa,GAAG,CAAC,IAAD,EAAO,cAAP,EAAuBC,IAAvB,CAA4B,GAA5B,CAAtB;AACA,QAAMC,IAAI,GAAG,MAAMP,OAAO,CAACK,aAAD,CAA1B;;AAEA,QAAM;AAAEH,IAAAA,SAAS,EAAEM;AAAb,MAA6DD,IAAnE;AAAA,QAA0CE,oBAA1C,4BAAmEF,IAAnE;;AAEA,SAAO;AACLG,IAAAA,KAAK,EAAE;AACLR,MAAAA,SAAS,EAAEM,kBADN;AAELL,MAAAA,WAAW,EAAEM;AAFR;AADF,GAAP;AAMD,CAZD;AAaA,kCAAeR,SAAf","sourcesContent":["import React from \"react\"\nimport { MDXRemote } from \"next-mdx-remote\"\nimport { MDXComponents } from \"components/mdx-components\"\nimport { InferGetStaticPropsType } from \"next\"\nimport Layout from \"layouts\"\nimport { loadMdx } from \"utils/load-mdx\"\n\nfunction Changelog({\n  mdxSource,\n  frontMatter,\n}: InferGetStaticPropsType<typeof getStaticProps>) {\n  return (\n    <Layout frontMatter={frontMatter}>\n      <MDXRemote {...mdxSource} components={MDXComponents} />\n    </Layout>\n  )\n}\n\nexport async function getStaticProps() {\n  const changelogPath = [\"..\", \"CHANGELOG.md\"].join(\"/\")\n  const page = await loadMdx(changelogPath)\n\n  const { mdxSource: processedMdxSource, ...processedFrontmatter } = page\n\n  return {\n    props: {\n      mdxSource: processedMdxSource,\n      frontMatter: processedFrontmatter,\n    },\n  }\n}\nexport default Changelog\n"]},"metadata":{},"sourceType":"module"}