{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport { chakra, Flex, Box, HStack, Icon, IconButton, Link, useColorMode, useColorModeValue, useDisclosure, useUpdateEffect } from \"@chakra-ui/react\";\nimport siteConfig from \"configs/site-config\";\nimport { useViewportScroll } from \"framer-motion\";\nimport NextLink from \"next/link\";\nimport React from \"react\";\nimport { FaMoon, FaSun, FaYoutube } from \"react-icons/fa\";\nimport Logo, { LogoIcon } from \"./logo\";\nimport { MobileNavButton, MobileNavContent } from \"./mobile-nav\";\nimport Search from \"./omni-search\";\nimport SponsorButton from \"./sponsor-button\";\nimport VersionSwitcher from \"./version-switcher\";\n\nvar DiscordIcon = function DiscordIcon(props) {\n  return __jsx(\"svg\", _extends({\n    viewBox: \"0 0 146 146\"\n  }, props), __jsx(\"path\", {\n    fill: \"currentColor\",\n    d: \"M107.75 125.001s-4.5-5.375-8.25-10.125c16.375-4.625 22.625-14.875 22.625-14.875-5.125 3.375-10 5.75-14.375 7.375-6.25 2.625-12.25 4.375-18.125 5.375-12 2.25-23 1.625-32.375-.125-7.125-1.375-13.25-3.375-18.375-5.375-2.875-1.125-6-2.5-9.125-4.25-.375-.25-.75-.375-1.125-.625-.25-.125-.375-.25-.5-.375-2.25-1.25-3.5-2.125-3.5-2.125s6 10 21.875 14.75c-3.75 4.75-8.375 10.375-8.375 10.375-27.625-.875-38.125-19-38.125-19 0-40.25 18-72.875 18-72.875 18-13.5 35.125-13.125 35.125-13.125l1.25 1.5c-22.5 6.5-32.875 16.375-32.875 16.375s2.75-1.5 7.375-3.625c13.375-5.875 24-7.5 28.375-7.875.75-.125 1.375-.25 2.125-.25 7.625-1 16.25-1.25 25.25-.25 11.875 1.375 24.625 4.875 37.625 12 0 0-9.875-9.375-31.125-15.875l1.75-2S110 19.626 128 33.126c0 0 18 32.625 18 72.875 0 0-10.625 18.125-38.25 19zM49.625 66.626c-7.125 0-12.75 6.25-12.75 13.875s5.75 13.875 12.75 13.875c7.125 0 12.75-6.25 12.75-13.875.125-7.625-5.625-13.875-12.75-13.875zm45.625 0c-7.125 0-12.75 6.25-12.75 13.875s5.75 13.875 12.75 13.875c7.125 0 12.75-6.25 12.75-13.875s-5.625-13.875-12.75-13.875z\",\n    fillRule: \"nonzero\"\n  }));\n};\n\nvar GithubIcon = function GithubIcon(props) {\n  return __jsx(\"svg\", _extends({\n    viewBox: \"0 0 20 20\"\n  }, props), __jsx(\"path\", {\n    fill: \"currentColor\",\n    d: \"M10 0a10 10 0 0 0-3.16 19.49c.5.1.68-.22.68-.48l-.01-1.7c-2.78.6-3.37-1.34-3.37-1.34-.46-1.16-1.11-1.47-1.11-1.47-.9-.62.07-.6.07-.6 1 .07 1.53 1.03 1.53 1.03.9 1.52 2.34 1.08 2.91.83.1-.65.35-1.09.63-1.34-2.22-.25-4.55-1.11-4.55-4.94 0-1.1.39-1.99 1.03-2.69a3.6 3.6 0 0 1 .1-2.64s.84-.27 2.75 1.02a9.58 9.58 0 0 1 5 0c1.91-1.3 2.75-1.02 2.75-1.02.55 1.37.2 2.4.1 2.64.64.7 1.03 1.6 1.03 2.69 0 3.84-2.34 4.68-4.57 4.93.36.31.68.92.68 1.85l-.01 2.75c0 .26.18.58.69.48A10 10 0 0 0 10 0\"\n  }));\n};\n\nfunction HeaderContent() {\n  var mobileNav = useDisclosure();\n\n  var _useColorMode = useColorMode(),\n      toggleMode = _useColorMode.toggleColorMode;\n\n  var text = useColorModeValue(\"dark\", \"light\");\n  var SwitchIcon = useColorModeValue(FaMoon, FaSun);\n  var mobileNavBtnRef = React.useRef();\n  useUpdateEffect(function () {\n    var _mobileNavBtnRef$curr;\n\n    (_mobileNavBtnRef$curr = mobileNavBtnRef.current) === null || _mobileNavBtnRef$curr === void 0 ? void 0 : _mobileNavBtnRef$curr.focus();\n  }, [mobileNav.isOpen]);\n  return __jsx(React.Fragment, null, __jsx(Flex, {\n    w: \"100%\",\n    h: \"100%\",\n    px: \"6\",\n    align: \"center\",\n    justify: \"space-between\"\n  }, __jsx(Flex, {\n    align: \"center\"\n  }, __jsx(NextLink, {\n    href: \"/\",\n    passHref: true\n  }, __jsx(chakra.a, {\n    display: \"block\",\n    \"aria-label\": \"Chakra UI, Back to homepage\"\n  }, __jsx(Logo, {\n    display: {\n      base: \"none\",\n      md: \"block\"\n    }\n  }), __jsx(Box, {\n    minW: \"3rem\",\n    display: {\n      base: \"block\",\n      md: \"none\"\n    }\n  }, __jsx(LogoIcon, null))))), __jsx(Flex, {\n    justify: \"flex-end\",\n    w: \"100%\",\n    align: \"center\",\n    color: \"gray.400\",\n    maxW: \"1100px\"\n  }, __jsx(Search, null), __jsx(VersionSwitcher, {\n    width: \"auto\",\n    flexShrink: 0,\n    display: {\n      base: \"none\",\n      md: \"flex\"\n    }\n  }), __jsx(HStack, {\n    spacing: \"5\",\n    display: {\n      base: \"none\",\n      md: \"flex\"\n    }\n  }, __jsx(Link, {\n    isExternal: true,\n    \"aria-label\": \"Go to Chakra UI GitHub page\",\n    href: siteConfig.repo.url\n  }, __jsx(Icon, {\n    as: GithubIcon,\n    display: \"block\",\n    transition: \"color 0.2s\",\n    w: \"5\",\n    h: \"5\",\n    _hover: {\n      color: \"gray.600\"\n    }\n  })), __jsx(Link, {\n    \"aria-label\": \"Go to Chakra UI Discord page\",\n    href: \"/discord\"\n  }, __jsx(Icon, {\n    as: DiscordIcon,\n    display: \"block\",\n    transition: \"color 0.2s\",\n    w: \"5\",\n    h: \"5\",\n    _hover: {\n      color: \"gray.600\"\n    }\n  })), __jsx(Link, {\n    isExternal: true,\n    \"aria-label\": \"Go to Chakra UI YouTube channel\",\n    href: siteConfig.youtube\n  }, __jsx(Icon, {\n    as: FaYoutube,\n    display: \"block\",\n    transition: \"color 0.2s\",\n    w: \"5\",\n    h: \"5\",\n    _hover: {\n      color: \"gray.600\"\n    }\n  }))), __jsx(IconButton, {\n    size: \"md\",\n    fontSize: \"lg\",\n    \"aria-label\": \"Switch to \".concat(text, \" mode\"),\n    variant: \"ghost\",\n    color: \"current\",\n    ml: {\n      base: \"0\",\n      md: \"3\"\n    },\n    onClick: toggleMode,\n    icon: __jsx(SwitchIcon, null)\n  }), __jsx(SponsorButton, {\n    ml: \"5\"\n  }), __jsx(MobileNavButton, {\n    ref: mobileNavBtnRef,\n    \"aria-label\": \"Open Menu\",\n    onClick: mobileNav.onOpen\n  }))), __jsx(MobileNavContent, {\n    isOpen: mobileNav.isOpen,\n    onClose: mobileNav.onClose\n  }));\n}\n\nfunction Header(props) {\n  var _ref$current$getBound, _ref$current;\n\n  var bg = useColorModeValue(\"white\", \"gray.800\");\n  var ref = React.useRef();\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      y = _React$useState2[0],\n      setY = _React$useState2[1];\n\n  var _ref = (_ref$current$getBound = (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.getBoundingClientRect()) !== null && _ref$current$getBound !== void 0 ? _ref$current$getBound : {},\n      _ref$height = _ref.height,\n      height = _ref$height === void 0 ? 0 : _ref$height;\n\n  var _useViewportScroll = useViewportScroll(),\n      scrollY = _useViewportScroll.scrollY;\n\n  React.useEffect(function () {\n    return scrollY.onChange(function () {\n      return setY(scrollY.get());\n    });\n  }, [scrollY]);\n  return __jsx(chakra.header, _extends({\n    ref: ref,\n    shadow: y > height ? \"sm\" : undefined,\n    transition: \"box-shadow 0.2s, background-color 0.2s\",\n    pos: \"sticky\",\n    top: \"0\",\n    zIndex: \"3\",\n    bg: bg,\n    left: \"0\",\n    right: \"0\",\n    width: \"full\"\n  }, props), __jsx(chakra.div, {\n    height: \"4.5rem\",\n    mx: \"auto\",\n    maxW: \"8xl\"\n  }, __jsx(HeaderContent, null)));\n}\n\nexport default Header;","map":null,"metadata":{},"sourceType":"module"}