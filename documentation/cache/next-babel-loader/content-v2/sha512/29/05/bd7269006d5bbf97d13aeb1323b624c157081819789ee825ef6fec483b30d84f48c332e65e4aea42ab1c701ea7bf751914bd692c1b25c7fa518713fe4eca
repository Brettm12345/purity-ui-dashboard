{"ast":null,"code":"import { withSuperJSONPage as _withSuperJSONPage } from \"babel-plugin-superjson-next/tools\";\nimport { withSuperJSONProps as _withSuperJSONProps } from \"babel-plugin-superjson-next/tools\";\nvar __jsx = React.createElement;\nimport { Avatar, Box, chakra, Heading, Icon, Link, SimpleGrid, Stack, Text, Wrap, WrapItem } from \"@chakra-ui/react\";\nimport { SkipNavContent, SkipNavLink } from \"@chakra-ui/skip-nav\";\nimport { AdBanner } from \"components/chakra-pro/ad-banner\";\nimport Container from \"components/container\";\nimport Header from \"components/header\";\nimport PageTransition from \"components/page-transition\";\nimport SEO from \"components/seo\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport * as React from \"react\";\nimport { IoIosGlobe, IoLogoGithub, IoLogoTwitter } from \"react-icons/io\";\n\nfunction SocialLink({\n  icon,\n  href\n}) {\n  return __jsx(Link, {\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    rounded: \"full\",\n    href: href,\n    isExternal: true\n  }, __jsx(Icon, {\n    as: icon,\n    transition: \"all 0.2s\",\n    _hover: {\n      color: \"teal.600\"\n    },\n    fontSize: \"xl\",\n    color: \"teal.500\"\n  }));\n}\n\nfunction Member({\n  member\n}) {\n  const {\n    avatar_url: avatarUrl,\n    bio,\n    name,\n    twitter_username: twitterUsername,\n    blog: websiteUrl,\n    url\n  } = member;\n  return __jsx(Box, null, __jsx(Stack, {\n    direction: \"row\",\n    spacing: 6\n  }, __jsx(Avatar, {\n    size: \"xl\",\n    src: avatarUrl\n  }), __jsx(Stack, {\n    spacing: 3,\n    maxW: \"320px\"\n  }, __jsx(Text, {\n    fontWeight: \"bold\",\n    fontSize: \"md\"\n  }, name), __jsx(Stack, {\n    isInline: true,\n    align: \"center\",\n    spacing: 2\n  }, __jsx(SocialLink, {\n    href: url,\n    icon: IoLogoGithub\n  }), twitterUsername && __jsx(SocialLink, {\n    href: `https://twitter.com/${twitterUsername}`,\n    icon: IoLogoTwitter\n  }), websiteUrl && __jsx(SocialLink, {\n    href: websiteUrl,\n    icon: IoIosGlobe\n  })), __jsx(Text, null, bio))));\n}\n\nfunction Team({\n  members,\n  contributors\n}) {\n  const memberLogins = members.map(({\n    login\n  }) => login);\n  const contributorsWithoutTeam = contributors.filter(({\n    login\n  }) => !memberLogins.includes(login));\n  return __jsx(React.Fragment, null, __jsx(SEO, {\n    title: \"Chakra UI Team and Contributors\",\n    description: \"List of team members and contributors that make the Chakra UI project possible\"\n  }), __jsx(SkipNavLink, {\n    zIndex: 20\n  }, \"Skip to Content\"), __jsx(AdBanner, null), __jsx(Header, null), __jsx(Box, {\n    mt: \"3rem\",\n    mb: \"60px\"\n  }, __jsx(SkipNavContent, null), __jsx(PageTransition, null, __jsx(Container, {\n    py: \"80px\",\n    textAlign: \"center\"\n  }, __jsx(chakra.h1, {\n    color: \"teal.500\",\n    textStyle: \"heading\",\n    mb: \"5\",\n    fontWeight: \"bold\"\n  }, \"Chakra UI Team\"), __jsx(Text, {\n    maxW: \"56ch\",\n    mx: \"auto\",\n    fontSize: \"lg\"\n  }, \"Amazing engineers who have contributed time, effort, and thought to Chakra UI. Without them, this project would not be possible.\")), __jsx(Container, null, __jsx(Stack, {\n    spacing: 8\n  }, __jsx(Heading, {\n    size: \"lg\"\n  }, \"Core Team \\uD83E\\uDD1D\"), __jsx(SimpleGrid, {\n    columns: [1, 1, 2],\n    spacing: \"40px\",\n    pt: \"3\"\n  }, members.map(member => __jsx(Member, {\n    key: member.login,\n    member: member\n  })))), __jsx(Stack, {\n    py: \"48px\",\n    spacing: 8\n  }, __jsx(Heading, {\n    size: \"lg\"\n  }, \"Our Sponsors \\uD83D\\uDCB0\"), __jsx(Box, null, __jsx(Text, {\n    textStyle: \"caps\",\n    mb: \"4\",\n    textTransform: \"uppercase\",\n    opacity: \"0.7\"\n  }, \"Organizations\"), __jsx(Wrap, null, new Array(9).fill(\"\").map((_, idx) => __jsx(WrapItem, {\n    as: \"a\",\n    key: idx,\n    href: `https://opencollective.com/chakra-ui/organization/${idx}/website`\n  }, __jsx(\"img\", {\n    src: `https://opencollective.com/chakra-ui/organization/${idx}/avatar.svg?avatarHeight=130`\n  }))))), __jsx(Box, null, __jsx(Text, {\n    textStyle: \"caps\",\n    mb: \"4\",\n    textTransform: \"uppercase\",\n    opacity: \"0.7\"\n  }, \"Individuals\"), __jsx(\"a\", {\n    href: \"https://opencollective.com/chakra-ui\"\n  }, __jsx(\"img\", {\n    src: \"https://opencollective.com/chakra-ui/individuals.svg?width=890\"\n  })))), __jsx(Stack, {\n    spacing: 8,\n    mt: {\n      base: \"40px\",\n      md: \"100px\"\n    }\n  }, __jsx(Heading, {\n    size: \"lg\"\n  }, \"Project Contributors \\uD83D\\uDC96\"), __jsx(Wrap, {\n    spacing: \"3\"\n  }, contributorsWithoutTeam.map(contributor => __jsx(WrapItem, {\n    as: Avatar,\n    key: contributor.login,\n    src: contributor.avatar_url\n  }))))))));\n}\n\nexport const getStaticProps = _withSuperJSONProps(async function getStaticProps() {\n  /**\n   * Read the profile/bio of each member from `.all-membersrc` file\n   * to avoid overfetching from Github\n   */\n  const membersRcPath = path.resolve(\"..\", \".all-membersrc\");\n  const {\n    members\n  } = JSON.parse(fs.readFileSync(membersRcPath, \"utf-8\"));\n  /**\n   * Read contributors from `.all-contributorsrc` file\n   * to avoid overfetching from Github\n   */\n\n  const contributorsRcPath = path.resolve(\"..\", \".all-contributorsrc\");\n  const {\n    contributors\n  } = JSON.parse(fs.readFileSync(contributorsRcPath, \"utf-8\"));\n  return {\n    props: {\n      members,\n      contributors\n    }\n  };\n}, []);\nexport default _withSuperJSONPage(Team);","map":null,"metadata":{},"sourceType":"module"}