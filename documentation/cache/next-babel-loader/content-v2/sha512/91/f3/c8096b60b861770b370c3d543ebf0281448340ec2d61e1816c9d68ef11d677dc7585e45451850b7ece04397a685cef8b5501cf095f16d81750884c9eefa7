{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/vladmihalache/Documents/GitHub/chakra-ui/website/src/components/algolia-search.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { SearchIcon } from \"@chakra-ui/icons\";\nimport { chakra, HStack, Kbd, Portal, Text, useColorModeValue, VisuallyHidden } from \"@chakra-ui/react\";\nimport { DocSearchModal, useDocSearchKeyboardEvents } from \"@docsearch/react\";\nimport Head from \"next/head\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\";\nimport * as React from \"react\";\nimport SearchStyle from \"./search.styles\";\nvar ACTION_KEY_DEFAULT = [\"Ctrl\", \"Control\"];\nvar ACTION_KEY_APPLE = [\"âŒ˜\", \"Command\"];\n\nfunction Hit(props) {\n  var hit = props.hit,\n      children = props.children;\n  return __jsx(Link, {\n    href: hit.url,\n    passHref: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, children));\n}\n\n_c = Hit;\nexport var SearchButton = /*#__PURE__*/React.forwardRef(_c2 = _s(function SearchButton(props, ref) {\n  _s();\n\n  var _React$useState = React.useState(ACTION_KEY_APPLE),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      actionKey = _React$useState2[0],\n      setActionKey = _React$useState2[1];\n\n  React.useEffect(function () {\n    if (typeof navigator === \"undefined\") return;\n    var isMac = /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform);\n\n    if (!isMac) {\n      setActionKey(ACTION_KEY_DEFAULT);\n    }\n  }, []);\n  return __jsx(chakra.button, _extends({\n    flex: \"1\",\n    type: \"button\",\n    role: \"search\",\n    mx: \"6\",\n    ref: ref,\n    lineHeight: \"1.2\",\n    w: \"100%\",\n    bg: useColorModeValue(\"white\", \"gray.700\"),\n    whiteSpace: \"nowrap\",\n    display: {\n      base: \"none\",\n      sm: \"flex\"\n    },\n    alignItems: \"center\",\n    color: \"gray.400\",\n    py: \"3\",\n    px: \"4\",\n    outline: \"0\",\n    _focus: {\n      shadow: \"outline\"\n    },\n    shadow: \"base\",\n    rounded: \"md\",\n    \"aria-label\": \"Search the docs\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }), __jsx(SearchIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), __jsx(HStack, {\n    w: \"full\",\n    ml: \"3\",\n    spacing: \"4px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, __jsx(Text, {\n    textAlign: \"left\",\n    flex: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Search the docs\"), __jsx(HStack, {\n    spacing: \"4px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, __jsx(VisuallyHidden, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"Press \"), __jsx(Kbd, {\n    color: \"gray.500\",\n    rounded: \"2px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, __jsx(chakra.div, {\n    as: \"abbr\",\n    title: actionKey[1],\n    textDecoration: \"none !important\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, actionKey[0])), __jsx(VisuallyHidden, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, \" and \"), __jsx(Kbd, {\n    color: \"gray.500\",\n    rounded: \"2px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, \"K\"), __jsx(VisuallyHidden, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \" to search\"))));\n}, \"NelCe1EbzZsB7hhviVIYuHrrkrs=\", false, function () {\n  return [useColorModeValue];\n}));\n_c3 = SearchButton;\n\nfunction AlgoliaSearch() {\n  _s2();\n\n  var router = useRouter();\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      isOpen = _React$useState4[0],\n      setIsOpen = _React$useState4[1];\n\n  var searchButtonRef = React.useRef();\n\n  var _React$useState5 = React.useState(null),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      initialQuery = _React$useState6[0],\n      setInitialQuery = _React$useState6[1];\n\n  var onOpen = React.useCallback(function () {\n    setIsOpen(true);\n  }, [setIsOpen]);\n  var onClose = React.useCallback(function () {\n    setIsOpen(false);\n  }, [setIsOpen]);\n  var onInput = React.useCallback(function (e) {\n    setIsOpen(true);\n    setInitialQuery(e.key);\n  }, [setIsOpen, setInitialQuery]);\n  useDocSearchKeyboardEvents({\n    isOpen: isOpen,\n    onOpen: onOpen,\n    onClose: onClose,\n    onInput: onInput,\n    searchButtonRef: searchButtonRef\n  });\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, __jsx(\"link\", {\n    rel: \"preconnect\",\n    href: \"https://BH4D9OD16A-dsn.algolia.net\",\n    crossOrigin: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  })), __jsx(SearchStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }), __jsx(SearchButton, {\n    onClick: onOpen,\n    ref: searchButtonRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }), isOpen && __jsx(Portal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, __jsx(DocSearchModal, {\n    placeholder: \"Search the docs\",\n    initialQuery: initialQuery,\n    initialScrollY: window.scrollY,\n    onClose: onClose,\n    indexName: \"chakra-ui\",\n    apiKey: \"df1dcc41f7b8e5d68e73dd56d1e19701\",\n    appId: \"BH4D9OD16A\" //@ts-expect-error\n    ,\n    navigator: {\n      navigate: function navigate(_ref) {\n        var suggestionUrl = _ref.suggestionUrl;\n        setIsOpen(false);\n        router.push(suggestionUrl);\n      }\n    },\n    hitComponent: Hit,\n    transformItems: function transformItems(items) {\n      return items.map(function (item) {\n        var a = document.createElement(\"a\");\n        a.href = item.url;\n        var hash = a.hash === \"#content-wrapper\" ? \"\" : a.hash;\n        item.url = \"\".concat(a.pathname).concat(hash);\n        return item;\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  })));\n}\n\n_s2(AlgoliaSearch, \"L+RntlhLlbmBTT/5rJ5cLC2Ga9E=\", false, function () {\n  return [useRouter, useDocSearchKeyboardEvents];\n});\n\n_c4 = AlgoliaSearch;\nexport default AlgoliaSearch;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Hit\");\n$RefreshReg$(_c2, \"SearchButton$React.forwardRef\");\n$RefreshReg$(_c3, \"SearchButton\");\n$RefreshReg$(_c4, \"AlgoliaSearch\");","map":{"version":3,"sources":["/Users/vladmihalache/Documents/GitHub/chakra-ui/website/src/components/algolia-search.tsx"],"names":["SearchIcon","chakra","HStack","Kbd","Portal","Text","useColorModeValue","VisuallyHidden","DocSearchModal","useDocSearchKeyboardEvents","Head","Link","useRouter","React","SearchStyle","ACTION_KEY_DEFAULT","ACTION_KEY_APPLE","Hit","props","hit","children","url","SearchButton","forwardRef","ref","useState","actionKey","setActionKey","useEffect","navigator","isMac","test","platform","base","sm","shadow","AlgoliaSearch","router","isOpen","setIsOpen","searchButtonRef","useRef","initialQuery","setInitialQuery","onOpen","useCallback","onClose","onInput","e","key","window","scrollY","navigate","suggestionUrl","push","items","map","item","a","document","createElement","href","hash","pathname"],"mappings":"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","sourcesContent":["import { SearchIcon } from \"@chakra-ui/icons\"\nimport {\n  chakra,\n  HStack,\n  HTMLChakraProps,\n  Kbd,\n  Portal,\n  Text,\n  useColorModeValue,\n  VisuallyHidden,\n} from \"@chakra-ui/react\"\nimport { DocSearchModal, useDocSearchKeyboardEvents } from \"@docsearch/react\"\nimport Head from \"next/head\"\nimport Link from \"next/link\"\nimport { useRouter } from \"next/router\"\nimport * as React from \"react\"\nimport SearchStyle from \"./search.styles\"\n\nconst ACTION_KEY_DEFAULT = [\"Ctrl\", \"Control\"]\nconst ACTION_KEY_APPLE = [\"âŒ˜\", \"Command\"]\n\nfunction Hit(props: any) {\n  const { hit, children } = props\n  return (\n    <Link href={hit.url} passHref>\n      <a>{children}</a>\n    </Link>\n  )\n}\n\nexport const SearchButton = React.forwardRef(function SearchButton(\n  props: HTMLChakraProps<\"button\">,\n  ref: React.Ref<HTMLButtonElement>,\n) {\n  const [actionKey, setActionKey] = React.useState<string[]>(ACTION_KEY_APPLE)\n  React.useEffect(() => {\n    if (typeof navigator === \"undefined\") return\n    const isMac = /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform)\n    if (!isMac) {\n      setActionKey(ACTION_KEY_DEFAULT)\n    }\n  }, [])\n\n  return (\n    <chakra.button\n      flex=\"1\"\n      type=\"button\"\n      role=\"search\"\n      mx=\"6\"\n      ref={ref}\n      lineHeight=\"1.2\"\n      w=\"100%\"\n      bg={useColorModeValue(\"white\", \"gray.700\")}\n      whiteSpace=\"nowrap\"\n      display={{ base: \"none\", sm: \"flex\" }}\n      alignItems=\"center\"\n      color=\"gray.400\"\n      py=\"3\"\n      px=\"4\"\n      outline=\"0\"\n      _focus={{ shadow: \"outline\" }}\n      shadow=\"base\"\n      rounded=\"md\"\n      aria-label=\"Search the docs\"\n      {...props}\n    >\n      <SearchIcon />\n      <HStack w=\"full\" ml=\"3\" spacing=\"4px\">\n        <Text textAlign=\"left\" flex=\"1\">\n          Search the docs\n        </Text>\n        <HStack spacing=\"4px\">\n          <VisuallyHidden>Press </VisuallyHidden>\n          <Kbd color=\"gray.500\" rounded=\"2px\">\n            <chakra.div\n              as=\"abbr\"\n              title={actionKey[1]}\n              textDecoration=\"none !important\"\n            >\n              {actionKey[0]}\n            </chakra.div>\n          </Kbd>\n          <VisuallyHidden> and </VisuallyHidden>\n          <Kbd color=\"gray.500\" rounded=\"2px\">\n            K\n          </Kbd>\n          <VisuallyHidden> to search</VisuallyHidden>\n        </HStack>\n      </HStack>\n    </chakra.button>\n  )\n})\n\nfunction AlgoliaSearch() {\n  const router = useRouter()\n  const [isOpen, setIsOpen] = React.useState(false)\n  const searchButtonRef = React.useRef()\n  const [initialQuery, setInitialQuery] = React.useState(null)\n\n  const onOpen = React.useCallback(() => {\n    setIsOpen(true)\n  }, [setIsOpen])\n\n  const onClose = React.useCallback(() => {\n    setIsOpen(false)\n  }, [setIsOpen])\n\n  const onInput = React.useCallback(\n    (e) => {\n      setIsOpen(true)\n      setInitialQuery(e.key)\n    },\n    [setIsOpen, setInitialQuery],\n  )\n\n  useDocSearchKeyboardEvents({\n    isOpen,\n    onOpen,\n    onClose,\n    onInput,\n    searchButtonRef,\n  })\n\n  return (\n    <>\n      <Head>\n        <link\n          rel=\"preconnect\"\n          href=\"https://BH4D9OD16A-dsn.algolia.net\"\n          crossOrigin=\"true\"\n        />\n      </Head>\n      <SearchStyle />\n      <SearchButton onClick={onOpen} ref={searchButtonRef} />\n      {isOpen && (\n        <Portal>\n          <DocSearchModal\n            placeholder=\"Search the docs\"\n            initialQuery={initialQuery}\n            initialScrollY={window.scrollY}\n            onClose={onClose}\n            indexName=\"chakra-ui\"\n            apiKey=\"df1dcc41f7b8e5d68e73dd56d1e19701\"\n            appId=\"BH4D9OD16A\"\n            //@ts-expect-error\n            navigator={{\n              navigate({ suggestionUrl }) {\n                setIsOpen(false)\n                router.push(suggestionUrl)\n              },\n            }}\n            hitComponent={Hit}\n            transformItems={(items) => {\n              return items.map((item) => {\n                const a = document.createElement(\"a\")\n                a.href = item.url\n                const hash = a.hash === \"#content-wrapper\" ? \"\" : a.hash\n                item.url = `${a.pathname}${hash}`\n                return item\n              })\n            }}\n          />\n        </Portal>\n      )}\n    </>\n  )\n}\n\nexport default AlgoliaSearch\n"]},"metadata":{},"sourceType":"module"}