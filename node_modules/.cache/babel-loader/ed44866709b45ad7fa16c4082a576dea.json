{"ast":null,"code":"import React from'react';import{Tr,Td,Avatar,AvatarGroup,Flex,Text,Progress,Icon,useColorModeValue}from\"@chakra-ui/react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function DashboardTableRow(props){var logo=props.logo,name=props.name,members=props.members,budget=props.budget,progression=props.progression;var textColor=useColorModeValue(\"gray.700\",\"white\");return/*#__PURE__*/_jsxs(Tr,{children:[/*#__PURE__*/_jsx(Td,{minWidth:{sm:\"250px\"},pl:\"0px\",children:/*#__PURE__*/_jsxs(Flex,{align:\"center\",py:\".8rem\",minWidth:\"100%\",flexWrap:\"nowrap\",children:[/*#__PURE__*/_jsx(Icon,{as:logo,h:\"24px\",w:\"24px\",pr:\"5px\"}),/*#__PURE__*/_jsx(Text,{fontSize:\"md\",color:textColor,fontWeight:\"bold\",minWidth:\"100%\",children:name})]})}),/*#__PURE__*/_jsx(Td,{children:/*#__PURE__*/_jsx(AvatarGroup,{size:\"sm\",children:members.map(function(member){return/*#__PURE__*/_jsx(Avatar,{name:\"Ryan Florence\",src:member,_hover:{zIndex:'3',cursor:'pointer'}});})})}),/*#__PURE__*/_jsx(Td,{children:/*#__PURE__*/_jsx(Text,{fontSize:\"md\",color:textColor,fontWeight:\"bold\",pb:\".5rem\",children:budget})}),/*#__PURE__*/_jsx(Td,{children:/*#__PURE__*/_jsxs(Flex,{direction:\"column\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"md\",color:\"teal.300\",fontWeight:\"bold\",pb:\".2rem\",children:\"\".concat(progression,\"%\")}),/*#__PURE__*/_jsx(Progress,{colorScheme:progression===100?\"teal\":\"cyan\",size:\"xs\",value:progression,borderRadius:\"15px\"})]})})]});}export default DashboardTableRow;","map":{"version":3,"sources":["/Users/vladmihalache/Documents/GitHub/purity-ui-dashboard-1/src/components/Tables/DashboardTableRow.js"],"names":["React","Tr","Td","Avatar","AvatarGroup","Flex","Text","Progress","Icon","useColorModeValue","DashboardTableRow","props","logo","name","members","budget","progression","textColor","sm","map","member","zIndex","cursor"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,EAAR,CAAYC,EAAZ,CAAgBC,MAAhB,CAAwBC,WAAxB,CAAqCC,IAArC,CAA2CC,IAA3C,CAAiDC,QAAjD,CAA2DC,IAA3D,CAAiEC,iBAAjE,KAAyF,kBAAzF,C,wFAGA,QAASC,CAAAA,iBAAT,CAA2BC,KAA3B,CAAkC,CAC9B,GAAOC,CAAAA,IAAP,CAAmDD,KAAnD,CAAOC,IAAP,CAAaC,IAAb,CAAmDF,KAAnD,CAAaE,IAAb,CAAmBC,OAAnB,CAAmDH,KAAnD,CAAmBG,OAAnB,CAA4BC,MAA5B,CAAmDJ,KAAnD,CAA4BI,MAA5B,CAAoCC,WAApC,CAAmDL,KAAnD,CAAoCK,WAApC,CACA,GAAMC,CAAAA,SAAS,CAAGR,iBAAiB,CAAC,UAAD,CAAa,OAAb,CAAnC,CACA,mBACI,MAAC,EAAD,yBACI,KAAC,EAAD,EAAI,QAAQ,CAAE,CAACS,EAAE,CAAE,OAAL,CAAd,CAA6B,EAAE,CAAC,KAAhC,uBACI,MAAC,IAAD,EAAM,KAAK,CAAC,QAAZ,CAAqB,EAAE,CAAC,OAAxB,CAAgC,QAAQ,CAAC,MAAzC,CAAgD,QAAQ,CAAC,QAAzD,wBACI,KAAC,IAAD,EAAM,EAAE,CAAEN,IAAV,CAAgB,CAAC,CAAE,MAAnB,CAA2B,CAAC,CAAE,MAA9B,CAAsC,EAAE,CAAC,KAAzC,EADJ,cAEI,KAAC,IAAD,EAAM,QAAQ,CAAC,IAAf,CAAoB,KAAK,CAAEK,SAA3B,CAAsC,UAAU,CAAC,MAAjD,CAAwD,QAAQ,CAAC,MAAjE,UAAyEJ,IAAzE,EAFJ,GADJ,EADJ,cAQI,KAAC,EAAD,wBACI,KAAC,WAAD,EAAa,IAAI,CAAC,IAAlB,UAEQC,OAAO,CAACK,GAAR,CAAY,SAAAC,MAAM,CAAI,CAClB,mBACI,KAAC,MAAD,EAAQ,IAAI,CAAC,eAAb,CAA6B,GAAG,CAAEA,MAAlC,CAA0C,MAAM,CAAE,CAACC,MAAM,CAAE,GAAT,CAAcC,MAAM,CAAE,SAAtB,CAAlD,EADJ,CAGH,CAJD,CAFR,EADJ,EARJ,cAmBI,KAAC,EAAD,wBACI,KAAC,IAAD,EAAM,QAAQ,CAAC,IAAf,CAAoB,KAAK,CAAEL,SAA3B,CAAsC,UAAU,CAAC,MAAjD,CAAwD,EAAE,CAAC,OAA3D,UAAoEF,MAApE,EADJ,EAnBJ,cAsBI,KAAC,EAAD,wBACI,MAAC,IAAD,EAAM,SAAS,CAAC,QAAhB,wBACA,KAAC,IAAD,EAAM,QAAQ,CAAC,IAAf,CAAoB,KAAK,CAAC,UAA1B,CAAqC,UAAU,CAAC,MAAhD,CAAuD,EAAE,CAAC,OAA1D,oBAAsEC,WAAtE,OADA,cAEA,KAAC,QAAD,EAAU,WAAW,CAAEA,WAAW,GAAK,GAAhB,CAAsB,MAAtB,CAA+B,MAAtD,CAA8D,IAAI,CAAC,IAAnE,CAAwE,KAAK,CAAEA,WAA/E,CAA4F,YAAY,CAAC,MAAzG,EAFA,GADJ,EAtBJ,GADJ,CA+BH,CAED,cAAeN,CAAAA,iBAAf","sourcesContent":["import React from 'react';\nimport {Tr, Td, Avatar, AvatarGroup, Flex, Text, Progress, Icon, useColorModeValue} from \"@chakra-ui/react\";\n\n\nfunction DashboardTableRow(props) {\n    const {logo, name, members, budget, progression} = props;\n    const textColor = useColorModeValue(\"gray.700\", \"white\");\n    return (\n        <Tr>\n            <Td minWidth={{sm: \"250px\"}} pl=\"0px\">\n                <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n                    <Icon as={logo} h={\"24px\"} w={\"24px\"} pr=\"5px\"/>\n                    <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" minWidth=\"100%\">{name}</Text>\n                </Flex>\n            </Td>\n\n            <Td>\n                <AvatarGroup size=\"sm\">\n                    {\n                        members.map(member => {\n                            return (\n                                <Avatar name=\"Ryan Florence\" src={member} _hover={{zIndex: '3', cursor: 'pointer'}}/>\n                            )\n                        })\n                    }\n                </AvatarGroup>\n            </Td>\n            <Td>\n                <Text fontSize=\"md\" color={textColor} fontWeight=\"bold\" pb=\".5rem\">{budget}</Text>\n            </Td>\n            <Td>\n                <Flex direction=\"column\">\n                <Text fontSize=\"md\" color=\"teal.300\" fontWeight=\"bold\" pb=\".2rem\">{`${progression}%`}</Text>\n                <Progress colorScheme={progression === 100 ? \"teal\" : \"cyan\"} size=\"xs\" value={progression} borderRadius=\"15px\"/>\n                </Flex>\n            </Td>\n        </Tr>\n    )\n}\n\nexport default DashboardTableRow\n"]},"metadata":{},"sourceType":"module"}