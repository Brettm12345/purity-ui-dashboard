{"ast":null,"code":"import _objectSpread from\"/Users/vladmihalache/Documents/GitHub/purity-ui-dashboard-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/vladmihalache/Documents/GitHub/purity-ui-dashboard-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";// Chakra imports\nimport{ChakraProvider,Portal,useDisclosure}from\"@chakra-ui/react\";import Configurator from\"components/Configurator/Configurator\";import Footer from\"components/Footer/Footer.js\";// Layout components\nimport AdminNavbar from\"components/Navbars/AdminNavbar.js\";import Sidebar from\"components/Sidebar/Sidebar.js\";import React,{useState}from\"react\";import{Redirect,Route,Switch}from\"react-router-dom\";import routes from\"routes.js\";// Custom Chakra theme\nimport theme from\"theme/theme.js\";import FixedPlugin from\"../components/FixedPlugin/FixedPlugin\";// Custom components\nimport MainPanel from\"../components/Layout/MainPanel\";import PanelContainer from\"../components/Layout/PanelContainer\";import PanelContent from\"../components/Layout/PanelContent\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Dashboard(props){var rest=Object.assign({},props);// states and functions\nvar _useState=useState(\"transparent\"),_useState2=_slicedToArray(_useState,2),sidebarVariant=_useState2[0],setSidebarVariant=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),fixed=_useState4[0],setFixed=_useState4[1];// ref for main panel div\nvar mainPanel=/*#__PURE__*/React.createRef();// functions for changing the states from components\nvar getRoute=function getRoute(){return window.location.pathname!==\"/admin/full-screen-maps\";};var getActiveRoute=function getActiveRoute(routes){var activeRoute=\"Default Brand Text\";for(var i=0;i<routes.length;i++){if(routes[i].collapse){var collapseActiveRoute=getActiveRoute(routes[i].views);if(collapseActiveRoute!==activeRoute){return collapseActiveRoute;}}else if(routes[i].category){var categoryActiveRoute=getActiveRoute(routes[i].views);if(categoryActiveRoute!==activeRoute){return categoryActiveRoute;}}else{if(window.location.href.indexOf(routes[i].layout+routes[i].path)!==-1){return routes[i].name;}}}return activeRoute;};// This changes navbar state(fixed or not)\nvar getActiveNavbar=function getActiveNavbar(routes){var activeNavbar=false;for(var i=0;i<routes.length;i++){if(routes[i].category){var categoryActiveNavbar=getActiveNavbar(routes[i].views);if(categoryActiveNavbar!==activeNavbar){return categoryActiveNavbar;}}else{if(window.location.href.indexOf(routes[i].layout+routes[i].path)!==-1){if(routes[i].secondaryNavbar){return routes[i].secondaryNavbar;}}}}return activeNavbar;};var getRoutes=function getRoutes(routes){return routes.map(function(prop,key){if(prop.collapse){return getRoutes(prop.views);}if(prop.category===\"account\"){return getRoutes(prop.views);}if(prop.layout===\"/admin\"){return/*#__PURE__*/_jsx(Route,{path:prop.layout+prop.path,component:prop.component},key);}else{return null;}});};var _useDisclosure=useDisclosure(),isOpen=_useDisclosure.isOpen,onOpen=_useDisclosure.onOpen,onClose=_useDisclosure.onClose;// Chakra Color Mode\nreturn/*#__PURE__*/_jsxs(ChakraProvider,{theme:theme,resetCss:false,children:[/*#__PURE__*/_jsx(Sidebar,_objectSpread({routes:routes,logoText:\"PURITY UI DASHBOARD\",display:\"none\",sidebarVariant:sidebarVariant},rest)),/*#__PURE__*/_jsxs(MainPanel,{ref:mainPanel,w:{base:\"100%\",xl:\"calc(100% - 275px)\"},children:[/*#__PURE__*/_jsx(Portal,{children:/*#__PURE__*/_jsx(AdminNavbar,_objectSpread({onOpen:onOpen,logoText:\"PURITY UI DASHBOARD\",brandText:getActiveRoute(routes),secondary:getActiveNavbar(routes),rtlActive:false,fixed:fixed},rest))}),getRoute()?/*#__PURE__*/_jsx(PanelContent,{children:/*#__PURE__*/_jsx(PanelContainer,{children:/*#__PURE__*/_jsxs(Switch,{children:[getRoutes(routes),/*#__PURE__*/_jsx(Redirect,{from:\"/admin\",to:\"/admin/dashboard\"})]})})}):null,/*#__PURE__*/_jsx(Footer,{}),/*#__PURE__*/_jsx(Portal,{children:/*#__PURE__*/_jsx(FixedPlugin,{secondary:getActiveNavbar(routes),rtlActive:false,fixed:fixed,onOpen:onOpen})}),/*#__PURE__*/_jsx(Configurator,{secondary:getActiveNavbar(routes),isOpen:isOpen,onClose:onClose,isChecked:fixed,onSwitch:function onSwitch(value){setFixed(value);},onOpaque:function onOpaque(){return setSidebarVariant(\"opaque\");},onTransparent:function onTransparent(){return setSidebarVariant(\"transparent\");}})]})]});}","map":{"version":3,"sources":["/Users/vladmihalache/Documents/GitHub/purity-ui-dashboard-1/src/layouts/Admin.js"],"names":["ChakraProvider","Portal","useDisclosure","Configurator","Footer","AdminNavbar","Sidebar","React","useState","Redirect","Route","Switch","routes","theme","FixedPlugin","MainPanel","PanelContainer","PanelContent","Dashboard","props","rest","sidebarVariant","setSidebarVariant","fixed","setFixed","mainPanel","createRef","getRoute","window","location","pathname","getActiveRoute","activeRoute","i","length","collapse","collapseActiveRoute","views","category","categoryActiveRoute","href","indexOf","layout","path","name","getActiveNavbar","activeNavbar","categoryActiveNavbar","secondaryNavbar","getRoutes","map","prop","key","component","isOpen","onOpen","onClose","base","xl","value"],"mappings":"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","sourcesContent":["// Chakra imports\nimport { ChakraProvider, Portal, useDisclosure } from \"@chakra-ui/react\";\nimport Configurator from \"components/Configurator/Configurator\";\nimport Footer from \"components/Footer/Footer.js\";\n// Layout components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport React, { useState } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport routes from \"routes.js\";\n// Custom Chakra theme\nimport theme from \"theme/theme.js\";\nimport FixedPlugin from \"../components/FixedPlugin/FixedPlugin\";\n// Custom components\nimport MainPanel from \"../components/Layout/MainPanel\";\nimport PanelContainer from \"../components/Layout/PanelContainer\";\nimport PanelContent from \"../components/Layout/PanelContent\";\nexport default function Dashboard(props) {\n  const { ...rest } = props;\n  // states and functions\n  const [sidebarVariant, setSidebarVariant] = useState(\"transparent\");\n  const [fixed, setFixed] = useState(false);\n  // ref for main panel div\n  const mainPanel = React.createRef();\n  // functions for changing the states from components\n  const getRoute = () => {\n    return window.location.pathname !== \"/admin/full-screen-maps\";\n  };\n  const getActiveRoute = (routes) => {\n    let activeRoute = \"Default Brand Text\";\n    for (let i = 0; i < routes.length; i++) {\n      if (routes[i].collapse) {\n        let collapseActiveRoute = getActiveRoute(routes[i].views);\n        if (collapseActiveRoute !== activeRoute) {\n          return collapseActiveRoute;\n        }\n      } else if (routes[i].category) {\n        let categoryActiveRoute = getActiveRoute(routes[i].views);\n        if (categoryActiveRoute !== activeRoute) {\n          return categoryActiveRoute;\n        }\n      } else {\n        if (\n          window.location.href.indexOf(routes[i].layout + routes[i].path) !== -1\n        ) {\n          return routes[i].name;\n        }\n      }\n    }\n    return activeRoute;\n  };\n  // This changes navbar state(fixed or not)\n  const getActiveNavbar = (routes) => {\n    let activeNavbar = false;\n    for (let i = 0; i < routes.length; i++) {\n      if (routes[i].category) {\n        let categoryActiveNavbar = getActiveNavbar(routes[i].views);\n        if (categoryActiveNavbar !== activeNavbar) {\n          return categoryActiveNavbar;\n        }\n      } else {\n        if (\n          window.location.href.indexOf(routes[i].layout + routes[i].path) !== -1\n        ) {\n          if (routes[i].secondaryNavbar) {\n            return routes[i].secondaryNavbar;\n          }\n        }\n      }\n    }\n    return activeNavbar;\n  };\n  const getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.collapse) {\n        return getRoutes(prop.views);\n      }\n      if (prop.category === \"account\") {\n        return getRoutes(prop.views);\n      }\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  // Chakra Color Mode\n  return (\n    <ChakraProvider theme={theme} resetCss={false}>\n      <Sidebar\n        routes={routes}\n        logoText={\"PURITY UI DASHBOARD\"}\n        display=\"none\"\n        sidebarVariant={sidebarVariant}\n        {...rest}\n      />\n      <MainPanel\n        ref={mainPanel}\n        w={{\n          base: \"100%\",\n          xl: \"calc(100% - 275px)\",\n        }}\n      >\n        <Portal>\n          <AdminNavbar\n            onOpen={onOpen}\n            logoText={\"PURITY UI DASHBOARD\"}\n            brandText={getActiveRoute(routes)}\n            secondary={getActiveNavbar(routes)}\n            rtlActive={false}\n            fixed={fixed}\n            {...rest}\n          />\n        </Portal>\n        {getRoute() ? (\n          <PanelContent>\n            <PanelContainer>\n              <Switch>\n                {getRoutes(routes)}\n                <Redirect from=\"/admin\" to=\"/admin/dashboard\" />\n              </Switch>\n            </PanelContainer>\n          </PanelContent>\n        ) : null}\n        <Footer />\n        <Portal>\n          <FixedPlugin\n            secondary={getActiveNavbar(routes)}\n            rtlActive={false}\n            fixed={fixed}\n            onOpen={onOpen}\n          />\n        </Portal>\n        <Configurator\n          secondary={getActiveNavbar(routes)}\n          isOpen={isOpen}\n          onClose={onClose}\n          isChecked={fixed}\n          onSwitch={(value) => {\n            setFixed(value);\n          }}\n          onOpaque={() => setSidebarVariant(\"opaque\")}\n          onTransparent={() => setSidebarVariant(\"transparent\")}\n        />\n      </MainPanel>\n    </ChakraProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}