{"ast":null,"code":"import _slicedToArray from \"/Users/vladmihalache/Documents/GitHub/purity-ui-dashboard-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/vladmihalache/Documents/GitHub/purity-ui-dashboard-1/src/components/Sidebar/Sidebar.js\",\n    _s2 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\n/*eslint-disable*/\nimport React from \"react\";\nimport { NavLink, useLocation } from \"react-router-dom\";\nimport PropTypes from \"prop-types\"; // chakra imports\n\nimport { Button, Flex, Text, Link, Stack, Box, useColorModeValue, useDisclosure, Drawer, DrawerBody, DrawerOverlay, DrawerContent, DrawerCloseButton } from \"@chakra-ui/react\";\nimport { HamburgerIcon } from \"@chakra-ui/icons\";\nimport IconBox from \"components/Icons/IconBox\";\nimport { DashboardLogo, CreativeTimLogo } from \"components/Icons/Icons\";\nimport { Separator } from \"components/Separator/Separator\";\nimport { SidebarHelp } from \"components/Sidebar/SidebarHelp\"; // FUNCTIONS\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Sidebar(props) {\n  _s2();\n\n  var _this = this,\n      _s = $RefreshSig$();\n\n  // to check for active links and opened collapses\n  var location = useLocation(); // this is for the rest of the collapses\n\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1]; // React.useEffect(() => {\n  //   setState(getCollapseStates(props.routes));\n  // }, []);\n\n\n  var mainPanel = React.useRef();\n  var variantChange = \"0.2s linear\"; // verifies if routeName is the one active (in browser input)\n\n  var activeRoute = function activeRoute(routeName) {\n    return location.pathname === routeName ? \"active\" : \"\";\n  }; // this function creates the links and collapses that appear in the sidebar (left menu)\n\n\n  var createLinks = function createLinks(routes) {\n    _s();\n\n    var sidebarVariant = props.sidebarVariant,\n        rtlActive = props.rtlActive; // Chakra Color Mode\n\n    var activeBg = useColorModeValue(\"white\", \"gray.700\");\n    var inactiveBg = useColorModeValue(\"white\", \"gray.700\");\n    var activeColor = useColorModeValue(\"gray.700\", \"white\");\n    var inactiveColor = useColorModeValue(\"gray.400\", \"gray.400\");\n    var sidebarActiveShadow = \"0px 7px 11px rgba(0, 0, 0, 0.04)\"; // Here are all the props that may change depending on sidebar's state.(Opaque or transparent)\n\n    if (sidebarVariant === \"opaque\") {\n      activeBg = \"transparent\";\n      inactiveBg = useColorModeValue(\"gray.100\", \"gray.600\");\n      activeColor = useColorModeValue(\"gray.700\", \"white\");\n      inactiveColor = useColorModeValue(\"gray.400\", \"gray.400\");\n      sidebarActiveShadow = \"none\";\n    }\n\n    return routes.map(function (prop, key) {\n      if (prop.redirect) {\n        return null;\n      }\n\n      if (prop.category) {\n        var st = {};\n        st[prop[\"state\"]] = !state[prop.state];\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            color: activeColor,\n            fontWeight: \"bold\",\n            mb: {\n              xl: \"12px\"\n            },\n            mx: \"auto\",\n            ps: {\n              sm: \"10px\",\n              xl: \"16px\"\n            },\n            py: \"12px\",\n            children: rtlActive ? prop.rtlName : prop.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, _this), createLinks(prop.views)]\n        }, void 0, true);\n      }\n\n      return /*#__PURE__*/_jsxDEV(NavLink, {\n        to: prop.layout + prop.path,\n        children: activeRoute(prop.layout + prop.path) === \"active\" ? /*#__PURE__*/_jsxDEV(Button, {\n          boxSize: \"initial\",\n          justifyContent: \"flex-start\",\n          alignItems: \"center\",\n          boxShadow: sidebarActiveShadow,\n          bg: activeBg,\n          transition: variantChange,\n          mb: {\n            xl: \"12px\"\n          },\n          mx: {\n            xl: \"auto\"\n          },\n          ps: {\n            sm: \"10px\",\n            xl: \"16px\"\n          },\n          py: \"12px\",\n          borderRadius: \"15px\",\n          _hover: \"none\",\n          w: \"100%\",\n          _active: {\n            bg: \"inherit\",\n            transform: \"none\",\n            borderColor: \"transparent\"\n          },\n          _focus: {\n            boxShadow: \"0px 7px 11px rgba(0, 0, 0, 0.04)\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Flex, {\n            children: [typeof prop.icon === \"string\" ? /*#__PURE__*/_jsxDEV(Icon, {\n              children: prop.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 19\n            }, _this) : /*#__PURE__*/_jsxDEV(IconBox, {\n              bg: \"teal.300\",\n              color: \"white\",\n              h: \"30px\",\n              w: \"30px\",\n              me: \"12px\",\n              transition: variantChange,\n              children: prop.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(Text, {\n              color: activeColor,\n              my: \"auto\",\n              fontSize: \"sm\",\n              children: rtlActive ? prop.rtlName : prop.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, _this) : /*#__PURE__*/_jsxDEV(Button, {\n          boxSize: \"initial\",\n          justifyContent: \"flex-start\",\n          alignItems: \"center\",\n          bg: \"transparent\",\n          mb: {\n            xl: \"12px\"\n          },\n          mx: {\n            xl: \"auto\"\n          },\n          py: \"12px\",\n          ps: {\n            sm: \"10px\",\n            xl: \"16px\"\n          },\n          borderRadius: \"15px\",\n          _hover: \"none\",\n          w: \"100%\",\n          _active: {\n            bg: \"inherit\",\n            transform: \"none\",\n            borderColor: \"transparent\"\n          },\n          _focus: {\n            boxShadow: \"none\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Flex, {\n            children: [typeof prop.icon === \"string\" ? /*#__PURE__*/_jsxDEV(Icon, {\n              children: prop.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 19\n            }, _this) : /*#__PURE__*/_jsxDEV(IconBox, {\n              bg: inactiveBg,\n              color: \"teal.300\",\n              h: \"30px\",\n              w: \"30px\",\n              me: \"12px\",\n              transition: variantChange,\n              children: prop.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(Text, {\n              color: inactiveColor,\n              my: \"auto\",\n              fontSize: \"sm\",\n              children: rtlActive ? prop.rtlName : prop.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, _this);\n    });\n  };\n\n  _s(createLinks, \"DET2zIAQOcAk2d+PJdiaXw2DkZ4=\", false, function () {\n    return [useColorModeValue, useColorModeValue, useColorModeValue, useColorModeValue, useColorModeValue, useColorModeValue, useColorModeValue];\n  });\n\n  var logoText = props.logoText,\n      routes = props.routes,\n      rtlActive = props.rtlActive,\n      sidebarVariant = props.sidebarVariant;\n\n  var links = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: createLinks(routes)\n  }, void 0, false); //  BRAND\n  //  Chakra Color Mode\n\n\n  var mainText = useColorModeValue(\"gray.700\", \"gray.200\");\n  var sidebarBg = \"none\";\n  var sidebarRadius = \"0px\";\n  var sidebarMargins = \"0px\";\n\n  if (sidebarVariant === \"opaque\") {\n    sidebarBg = useColorModeValue(\"white\", \"gray.700\");\n    sidebarRadius = \"16px\";\n    sidebarMargins = \"16px 0px 16px 16px\";\n  }\n\n  var brand = /*#__PURE__*/_jsxDEV(Box, {\n    pt: \"25px\",\n    mb: \"12px\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      href: \"\".concat(process.env.PUBLIC_URL, \"/#/\"),\n      target: \"_blank\",\n      display: \"flex\",\n      lineHeight: \"100%\",\n      mb: \"30px\",\n      fontWeight: \"bold\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      fontSize: \"11px\",\n      children: [/*#__PURE__*/_jsxDEV(CreativeTimLogo, {\n        w: \"28px\",\n        h: \"28px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        w: \"1px\",\n        h: \"18px\",\n        mx: \"10px\",\n        backgroundColor: mainText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        mt: \"3px\",\n        children: logoText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Separator, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this); // SIDEBAR\n\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    ref: mainPanel,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      display: {\n        sm: \"none\",\n        xl: \"block\"\n      },\n      position: \"fixed\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        bg: sidebarBg,\n        transition: variantChange,\n        w: \"260px\",\n        maxW: \"260px\",\n        ms: {\n          sm: \"16px\"\n        },\n        my: {\n          sm: \"16px\"\n        },\n        h: \"calc(100vh - 32px)\",\n        ps: \"20px\",\n        pe: \"20px\",\n        m: sidebarMargins,\n        borderRadius: sidebarRadius,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          children: brand\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"column\",\n          mb: \"40px\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            children: links\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SidebarHelp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 5\n  }, this);\n} // FUNCTIONS\n\n\n_s2(Sidebar, \"oiAlaQ3cWVneOIfEBnkrmuxYgCE=\", false, function () {\n  return [useLocation, useColorModeValue, useColorModeValue];\n});\n\n_c = Sidebar;\nexport function SidebarResponsive(props) {\n  _s4();\n\n  var _this2 = this,\n      _s3 = $RefreshSig$();\n\n  // to check for active links and opened collapses\n  var location = useLocation(); // this is for the rest of the collapses\n\n  var _React$useState3 = React.useState({}),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      state = _React$useState4[0],\n      setState = _React$useState4[1];\n\n  var mainPanel = React.useRef(); // verifies if routeName is the one active (in browser input)\n\n  var activeRoute = function activeRoute(routeName) {\n    return location.pathname === routeName ? \"active\" : \"\";\n  }; // this function creates the links and collapses that appear in the sidebar (left menu)\n\n\n  var createLinks = function createLinks(routes) {\n    _s3();\n\n    var rtlActive = props.rtlActive; // Chakra Color Mode\n\n    var activeBg = useColorModeValue(\"white\", \"gray.700\");\n    var inactiveBg = useColorModeValue(\"white\", \"gray.700\");\n    var activeColor = useColorModeValue(\"gray.700\", \"white\");\n    var inactiveColor = useColorModeValue(\"gray.400\", \"gray.400\");\n    return routes.map(function (prop, key) {\n      if (prop.redirect) {\n        return null;\n      }\n\n      if (prop.category) {\n        var st = {};\n        st[prop[\"state\"]] = !state[prop.state];\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            color: activeColor,\n            fontWeight: \"bold\",\n            mb: {\n              xl: \"12px\"\n            },\n            mx: \"auto\",\n            ps: {\n              sm: \"10px\",\n              xl: \"16px\"\n            },\n            py: \"12px\",\n            children: rtlActive ? prop.rtlName : prop.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, _this2), createLinks(prop.views)]\n        }, void 0, true);\n      }\n\n      return /*#__PURE__*/_jsxDEV(NavLink, {\n        to: prop.layout + prop.path,\n        children: activeRoute(prop.layout + prop.path) === \"active\" ? /*#__PURE__*/_jsxDEV(Button, {\n          boxSize: \"initial\",\n          justifyContent: \"flex-start\",\n          alignItems: \"center\",\n          bg: activeBg,\n          mb: {\n            xl: \"12px\"\n          },\n          mx: {\n            xl: \"auto\"\n          },\n          ps: {\n            sm: \"10px\",\n            xl: \"16px\"\n          },\n          py: \"12px\",\n          borderRadius: \"15px\",\n          _hover: \"none\",\n          w: \"100%\",\n          _active: {\n            bg: \"inherit\",\n            transform: \"none\",\n            borderColor: \"transparent\"\n          },\n          _focus: {\n            boxShadow: \"none\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Flex, {\n            children: [typeof prop.icon === \"string\" ? /*#__PURE__*/_jsxDEV(Icon, {\n              children: prop.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 19\n            }, _this2) : /*#__PURE__*/_jsxDEV(IconBox, {\n              bg: \"teal.300\",\n              color: \"white\",\n              h: \"30px\",\n              w: \"30px\",\n              me: \"12px\",\n              children: prop.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 19\n            }, _this2), /*#__PURE__*/_jsxDEV(Text, {\n              color: activeColor,\n              my: \"auto\",\n              fontSize: \"sm\",\n              children: rtlActive ? prop.rtlName : prop.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 17\n            }, _this2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 15\n          }, _this2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }, _this2) : /*#__PURE__*/_jsxDEV(Button, {\n          boxSize: \"initial\",\n          justifyContent: \"flex-start\",\n          alignItems: \"center\",\n          bg: \"transparent\",\n          mb: {\n            xl: \"12px\"\n          },\n          mx: {\n            xl: \"auto\"\n          },\n          py: \"12px\",\n          ps: {\n            sm: \"10px\",\n            xl: \"16px\"\n          },\n          borderRadius: \"15px\",\n          _hover: \"none\",\n          w: \"100%\",\n          _active: {\n            bg: \"inherit\",\n            transform: \"none\",\n            borderColor: \"transparent\"\n          },\n          _focus: {\n            boxShadow: \"none\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Flex, {\n            children: [typeof prop.icon === \"string\" ? /*#__PURE__*/_jsxDEV(Icon, {\n              children: prop.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 19\n            }, _this2) : /*#__PURE__*/_jsxDEV(IconBox, {\n              bg: inactiveBg,\n              color: \"teal.300\",\n              h: \"30px\",\n              w: \"30px\",\n              me: \"12px\",\n              children: prop.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 19\n            }, _this2), /*#__PURE__*/_jsxDEV(Text, {\n              color: inactiveColor,\n              my: \"auto\",\n              fontSize: \"sm\",\n              children: rtlActive ? prop.rtlName : prop.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 17\n            }, _this2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 15\n          }, _this2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 13\n        }, _this2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, _this2);\n    });\n  };\n\n  _s3(createLinks, \"QMO6YcS7/pNaL6Mj83cLJGNOtYQ=\", false, function () {\n    return [useColorModeValue, useColorModeValue, useColorModeValue, useColorModeValue];\n  });\n\n  var logoText = props.logoText,\n      routes = props.routes,\n      rtlActive = props.rtlActive;\n\n  var links = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: createLinks(routes)\n  }, void 0, false); //  BRAND\n  //  Chakra Color Mode\n\n\n  var mainText = useColorModeValue(\"gray.700\", \"gray.200\");\n  var hamburgerColor = useColorModeValue(\"gray.500\", \"gray.200\");\n\n  if (props.secondary === true) {\n    hamburgerColor = \"white\";\n  }\n\n  var brand = /*#__PURE__*/_jsxDEV(Box, {\n    pt: \"35px\",\n    mb: \"8px\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      href: \"\".concat(process.env.PUBLIC_URL, \"/#/\"),\n      target: \"_blank\",\n      display: \"flex\",\n      lineHeight: \"100%\",\n      mb: \"30px\",\n      fontWeight: \"bold\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      fontSize: \"11px\",\n      children: [/*#__PURE__*/_jsxDEV(DashboardLogo, {\n        w: \"28px\",\n        h: \"28px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        w: \"1px\",\n        h: \"18px\",\n        mx: \"10px\",\n        backgroundColor: mainText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        mt: \"3px\",\n        children: logoText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Separator, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 426,\n    columnNumber: 5\n  }, this); // SIDEBAR\n\n\n  var _useDisclosure = useDisclosure(),\n      isOpen = _useDisclosure.isOpen,\n      onOpen = _useDisclosure.onOpen,\n      onClose = _useDisclosure.onClose;\n\n  var btnRef = React.useRef(); // Color variables\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    ref: mainPanel,\n    display: props.display,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      display: {\n        sm: \"block\",\n        xl: \"none\"\n      },\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(HamburgerIcon, {\n          color: hamburgerColor,\n          w: \"18px\",\n          h: \"18px\",\n          me: \"16px\",\n          ref: btnRef,\n          colorScheme: \"teal\",\n          onClick: onOpen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n          isOpen: isOpen,\n          onClose: onClose,\n          placement: \"left\",\n          finalFocusRef: btnRef,\n          children: [/*#__PURE__*/_jsxDEV(DrawerOverlay, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DrawerContent, {\n            w: \"250px\",\n            maxW: \"250px\",\n            ms: {\n              sm: \"16px\"\n            },\n            my: {\n              sm: \"16px\"\n            },\n            borderRadius: \"16px\",\n            children: [/*#__PURE__*/_jsxDEV(DrawerCloseButton, {\n              _focus: {\n                boxShadow: \"none\"\n              },\n              _hover: {\n                boxShadow: \"none\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DrawerBody, {\n              maxW: \"250px\",\n              px: \"1rem\",\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                maxW: \"100%\",\n                h: \"100vh\",\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  children: brand\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 487,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                  direction: \"column\",\n                  mb: \"40px\",\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    children: links\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 489,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 488,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(SidebarHelp, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 491,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 451,\n    columnNumber: 5\n  }, this);\n} // PROPS\n\n_s4(SidebarResponsive, \"txycDqMzgiuV7GoZe4FJUKoCpd8=\", false, function () {\n  return [useLocation, useColorModeValue, useColorModeValue, useDisclosure];\n});\n\n_c2 = SidebarResponsive;\nSidebar.propTypes = {\n  rtlActive: PropTypes.bool,\n  logoText: PropTypes.string,\n  routes: PropTypes.arrayOf(PropTypes.object),\n  variant: PropTypes.string\n};\nSidebarResponsive.propTypes = {\n  rtlActive: PropTypes.bool,\n  logoText: PropTypes.string,\n  routes: PropTypes.arrayOf(PropTypes.object)\n};\nexport default Sidebar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Sidebar\");\n$RefreshReg$(_c2, \"SidebarResponsive\");","map":{"version":3,"sources":["/Users/vladmihalache/Documents/GitHub/purity-ui-dashboard-1/src/components/Sidebar/Sidebar.js"],"names":["React","NavLink","useLocation","PropTypes","Button","Flex","Text","Link","Stack","Box","useColorModeValue","useDisclosure","Drawer","DrawerBody","DrawerOverlay","DrawerContent","DrawerCloseButton","HamburgerIcon","IconBox","DashboardLogo","CreativeTimLogo","Separator","SidebarHelp","Sidebar","props","location","useState","state","setState","mainPanel","useRef","variantChange","activeRoute","routeName","pathname","createLinks","routes","sidebarVariant","rtlActive","activeBg","inactiveBg","activeColor","inactiveColor","sidebarActiveShadow","map","prop","key","redirect","category","st","xl","sm","rtlName","name","views","layout","path","bg","transform","borderColor","boxShadow","icon","logoText","links","mainText","sidebarBg","sidebarRadius","sidebarMargins","brand","process","env","PUBLIC_URL","SidebarResponsive","hamburgerColor","secondary","isOpen","onOpen","onClose","btnRef","display","propTypes","bool","string","arrayOf","object","variant"],"mappings":"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","sourcesContent":["/*eslint-disable*/\nimport React from \"react\";\nimport { NavLink, useLocation } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n// chakra imports\nimport {\n  Button,\n  Flex,\n  Text,\n  Link,\n  Stack,\n  Box,\n  useColorModeValue,\n  useDisclosure,\n  Drawer,\n  DrawerBody,\n  DrawerOverlay,\n  DrawerContent,\n  DrawerCloseButton,\n} from \"@chakra-ui/react\";\nimport { HamburgerIcon } from \"@chakra-ui/icons\";\nimport IconBox from \"components/Icons/IconBox\";\nimport { DashboardLogo, CreativeTimLogo } from \"components/Icons/Icons\";\nimport { Separator } from \"components/Separator/Separator\";\nimport { SidebarHelp } from \"components/Sidebar/SidebarHelp\";\n\n// FUNCTIONS\n\nfunction Sidebar(props) {\n  // to check for active links and opened collapses\n  let location = useLocation();\n  // this is for the rest of the collapses\n  const [state, setState] = React.useState({});\n  // React.useEffect(() => {\n  //   setState(getCollapseStates(props.routes));\n  // }, []);\n  const mainPanel = React.useRef();\n  let variantChange = \"0.2s linear\";\n  // verifies if routeName is the one active (in browser input)\n  const activeRoute = (routeName) => {\n    return location.pathname === routeName ? \"active\" : \"\";\n  };\n  // this function creates the links and collapses that appear in the sidebar (left menu)\n  const createLinks = (routes) => {\n    const { sidebarVariant, rtlActive } = props;\n    // Chakra Color Mode\n    let activeBg = useColorModeValue(\"white\", \"gray.700\");\n    let inactiveBg = useColorModeValue(\"white\", \"gray.700\");\n    let activeColor = useColorModeValue(\"gray.700\", \"white\");\n    let inactiveColor = useColorModeValue(\"gray.400\", \"gray.400\");\n    let sidebarActiveShadow = \"0px 7px 11px rgba(0, 0, 0, 0.04)\";\n    // Here are all the props that may change depending on sidebar's state.(Opaque or transparent)\n    if (sidebarVariant === \"opaque\") {\n      activeBg = \"transparent\";\n      inactiveBg = useColorModeValue(\"gray.100\", \"gray.600\");\n      activeColor = useColorModeValue(\"gray.700\", \"white\");\n      inactiveColor = useColorModeValue(\"gray.400\", \"gray.400\");\n      sidebarActiveShadow = \"none\";\n    }\n\n    return routes.map((prop, key) => {\n      if (prop.redirect) {\n        return null;\n      }\n      if (prop.category) {\n        var st = {};\n        st[prop[\"state\"]] = !state[prop.state];\n        return (\n          <>\n            <Text\n              color={activeColor}\n              fontWeight=\"bold\"\n              mb={{\n                xl: \"12px\",\n              }}\n              mx=\"auto\"\n              ps={{\n                sm: \"10px\",\n                xl: \"16px\",\n              }}\n              py=\"12px\"\n            >\n              {rtlActive ? prop.rtlName : prop.name}\n            </Text>\n            {createLinks(prop.views)}\n          </>\n        );\n      }\n      return (\n        <NavLink to={prop.layout + prop.path}>\n          {activeRoute(prop.layout + prop.path) === \"active\" ? (\n            <Button\n              boxSize=\"initial\"\n              justifyContent=\"flex-start\"\n              alignItems=\"center\"\n              boxShadow={sidebarActiveShadow}\n              bg={activeBg}\n              transition={variantChange}\n              mb={{\n                xl: \"12px\",\n              }}\n              mx={{\n                xl: \"auto\",\n              }}\n              ps={{\n                sm: \"10px\",\n                xl: \"16px\",\n              }}\n              py=\"12px\"\n              borderRadius=\"15px\"\n              _hover=\"none\"\n              w=\"100%\"\n              _active={{\n                bg: \"inherit\",\n                transform: \"none\",\n                borderColor: \"transparent\",\n              }}\n              _focus={{\n                boxShadow: \"0px 7px 11px rgba(0, 0, 0, 0.04)\",\n              }}\n            >\n              <Flex>\n                {typeof prop.icon === \"string\" ? (\n                  <Icon>{prop.icon}</Icon>\n                ) : (\n                  <IconBox\n                    bg=\"teal.300\"\n                    color=\"white\"\n                    h=\"30px\"\n                    w=\"30px\"\n                    me=\"12px\"\n                    transition={variantChange}\n                  >\n                    {prop.icon}\n                  </IconBox>\n                )}\n                <Text color={activeColor} my=\"auto\" fontSize=\"sm\">\n                  {rtlActive ? prop.rtlName : prop.name}\n                </Text>\n              </Flex>\n            </Button>\n          ) : (\n            <Button\n              boxSize=\"initial\"\n              justifyContent=\"flex-start\"\n              alignItems=\"center\"\n              bg=\"transparent\"\n              mb={{\n                xl: \"12px\",\n              }}\n              mx={{\n                xl: \"auto\",\n              }}\n              py=\"12px\"\n              ps={{\n                sm: \"10px\",\n                xl: \"16px\",\n              }}\n              borderRadius=\"15px\"\n              _hover=\"none\"\n              w=\"100%\"\n              _active={{\n                bg: \"inherit\",\n                transform: \"none\",\n                borderColor: \"transparent\",\n              }}\n              _focus={{\n                boxShadow: \"none\",\n              }}\n            >\n              <Flex>\n                {typeof prop.icon === \"string\" ? (\n                  <Icon>{prop.icon}</Icon>\n                ) : (\n                  <IconBox\n                    bg={inactiveBg}\n                    color=\"teal.300\"\n                    h=\"30px\"\n                    w=\"30px\"\n                    me=\"12px\"\n                    transition={variantChange}\n                  >\n                    {prop.icon}\n                  </IconBox>\n                )}\n                <Text color={inactiveColor} my=\"auto\" fontSize=\"sm\">\n                  {rtlActive ? prop.rtlName : prop.name}\n                </Text>\n              </Flex>\n            </Button>\n          )}\n        </NavLink>\n      );\n    });\n  };\n  const { logoText, routes, rtlActive, sidebarVariant } = props;\n\n  var links = <>{createLinks(routes)}</>;\n  //  BRAND\n  //  Chakra Color Mode\n  const mainText = useColorModeValue(\"gray.700\", \"gray.200\");\n  let sidebarBg = \"none\";\n  let sidebarRadius = \"0px\";\n  let sidebarMargins = \"0px\";\n  if (sidebarVariant === \"opaque\") {\n    sidebarBg = useColorModeValue(\"white\", \"gray.700\");\n    sidebarRadius = \"16px\";\n    sidebarMargins = \"16px 0px 16px 16px\";\n  }\n  var brand = (\n    <Box pt={\"25px\"} mb=\"12px\">\n      <Link\n        href={`${process.env.PUBLIC_URL}/#/`}\n        target=\"_blank\"\n        display=\"flex\"\n        lineHeight=\"100%\"\n        mb=\"30px\"\n        fontWeight=\"bold\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        fontSize=\"11px\"\n      >\n        <CreativeTimLogo w=\"28px\" h=\"28px\" />\n        <Box w=\"1px\" h=\"18px\" mx=\"10px\" backgroundColor={mainText}></Box>\n        <Text mt=\"3px\">{logoText}</Text>\n      </Link>\n      <Separator></Separator>\n    </Box>\n  );\n\n  // SIDEBAR\n  return (\n    <Box ref={mainPanel}>\n      <Box display={{ sm: \"none\", xl: \"block\" }} position=\"fixed\">\n        <Box\n          bg={sidebarBg}\n          transition={variantChange}\n          w=\"260px\"\n          maxW=\"260px\"\n          ms={{\n            sm: \"16px\",\n          }}\n          my={{\n            sm: \"16px\",\n          }}\n          h=\"calc(100vh - 32px)\"\n          ps=\"20px\"\n          pe=\"20px\"\n          m={sidebarMargins}\n          borderRadius={sidebarRadius}\n        >\n          <Box>{brand}</Box>\n          <Stack direction=\"column\" mb=\"40px\">\n            <Box>{links}</Box>\n          </Stack>\n          <SidebarHelp></SidebarHelp>\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n\n// FUNCTIONS\n\nexport function SidebarResponsive(props) {\n  // to check for active links and opened collapses\n  let location = useLocation();\n  // this is for the rest of the collapses\n  const [state, setState] = React.useState({});\n  const mainPanel = React.useRef();\n  // verifies if routeName is the one active (in browser input)\n  const activeRoute = (routeName) => {\n    return location.pathname === routeName ? \"active\" : \"\";\n  };\n  // this function creates the links and collapses that appear in the sidebar (left menu)\n  const createLinks = (routes) => {\n    const { rtlActive } = props;\n    // Chakra Color Mode\n    const activeBg = useColorModeValue(\"white\", \"gray.700\");\n    const inactiveBg = useColorModeValue(\"white\", \"gray.700\");\n    const activeColor = useColorModeValue(\"gray.700\", \"white\");\n    const inactiveColor = useColorModeValue(\"gray.400\", \"gray.400\");\n\n    return routes.map((prop, key) => {\n      if (prop.redirect) {\n        return null;\n      }\n      if (prop.category) {\n        var st = {};\n        st[prop[\"state\"]] = !state[prop.state];\n        return (\n          <>\n            <Text\n              color={activeColor}\n              fontWeight=\"bold\"\n              mb={{\n                xl: \"12px\",\n              }}\n              mx=\"auto\"\n              ps={{\n                sm: \"10px\",\n                xl: \"16px\",\n              }}\n              py=\"12px\"\n            >\n              {rtlActive ? prop.rtlName : prop.name}\n            </Text>\n            {createLinks(prop.views)}\n          </>\n        );\n      }\n      return (\n        <NavLink to={prop.layout + prop.path}>\n          {activeRoute(prop.layout + prop.path) === \"active\" ? (\n            <Button\n              boxSize=\"initial\"\n              justifyContent=\"flex-start\"\n              alignItems=\"center\"\n              bg={activeBg}\n              mb={{\n                xl: \"12px\",\n              }}\n              mx={{\n                xl: \"auto\",\n              }}\n              ps={{\n                sm: \"10px\",\n                xl: \"16px\",\n              }}\n              py=\"12px\"\n              borderRadius=\"15px\"\n              _hover=\"none\"\n              w=\"100%\"\n              _active={{\n                bg: \"inherit\",\n                transform: \"none\",\n                borderColor: \"transparent\",\n              }}\n              _focus={{\n                boxShadow: \"none\",\n              }}\n            >\n              <Flex>\n                {typeof prop.icon === \"string\" ? (\n                  <Icon>{prop.icon}</Icon>\n                ) : (\n                  <IconBox\n                    bg=\"teal.300\"\n                    color=\"white\"\n                    h=\"30px\"\n                    w=\"30px\"\n                    me=\"12px\"\n                  >\n                    {prop.icon}\n                  </IconBox>\n                )}\n                <Text color={activeColor} my=\"auto\" fontSize=\"sm\">\n                  {rtlActive ? prop.rtlName : prop.name}\n                </Text>\n              </Flex>\n            </Button>\n          ) : (\n            <Button\n              boxSize=\"initial\"\n              justifyContent=\"flex-start\"\n              alignItems=\"center\"\n              bg=\"transparent\"\n              mb={{\n                xl: \"12px\",\n              }}\n              mx={{\n                xl: \"auto\",\n              }}\n              py=\"12px\"\n              ps={{\n                sm: \"10px\",\n                xl: \"16px\",\n              }}\n              borderRadius=\"15px\"\n              _hover=\"none\"\n              w=\"100%\"\n              _active={{\n                bg: \"inherit\",\n                transform: \"none\",\n                borderColor: \"transparent\",\n              }}\n              _focus={{\n                boxShadow: \"none\",\n              }}\n            >\n              <Flex>\n                {typeof prop.icon === \"string\" ? (\n                  <Icon>{prop.icon}</Icon>\n                ) : (\n                  <IconBox\n                    bg={inactiveBg}\n                    color=\"teal.300\"\n                    h=\"30px\"\n                    w=\"30px\"\n                    me=\"12px\"\n                  >\n                    {prop.icon}\n                  </IconBox>\n                )}\n                <Text color={inactiveColor} my=\"auto\" fontSize=\"sm\">\n                  {rtlActive ? prop.rtlName : prop.name}\n                </Text>\n              </Flex>\n            </Button>\n          )}\n        </NavLink>\n      );\n    });\n  };\n  const { logoText, routes, rtlActive } = props;\n\n  var links = <>{createLinks(routes)}</>;\n  //  BRAND\n  //  Chakra Color Mode\n  const mainText = useColorModeValue(\"gray.700\", \"gray.200\");\n  let hamburgerColor = useColorModeValue(\"gray.500\", \"gray.200\");\n  if (props.secondary === true) {\n    hamburgerColor = \"white\";\n  }\n  var brand = (\n    <Box pt={\"35px\"} mb=\"8px\">\n      <Link\n        href={`${process.env.PUBLIC_URL}/#/`}\n        target=\"_blank\"\n        display=\"flex\"\n        lineHeight=\"100%\"\n        mb=\"30px\"\n        fontWeight=\"bold\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        fontSize=\"11px\"\n      >\n        <DashboardLogo w=\"28px\" h=\"28px\" />\n        <Box w=\"1px\" h=\"18px\" mx=\"10px\" backgroundColor={mainText}></Box>\n        <Text mt=\"3px\">{logoText}</Text>\n      </Link>\n      <Separator></Separator>\n    </Box>\n  );\n\n  // SIDEBAR\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const btnRef = React.useRef();\n  // Color variables\n  return (\n    <Box ref={mainPanel} display={props.display}>\n      <Box display={{ sm: \"block\", xl: \"none\" }}>\n        <>\n          <HamburgerIcon\n            color={hamburgerColor}\n            w=\"18px\"\n            h=\"18px\"\n            me=\"16px\"\n            ref={btnRef}\n            colorScheme=\"teal\"\n            onClick={onOpen}\n          />\n          <Drawer\n            isOpen={isOpen}\n            onClose={onClose}\n            placement=\"left\"\n            finalFocusRef={btnRef}\n          >\n            <DrawerOverlay />\n            <DrawerContent\n              w=\"250px\"\n              maxW=\"250px\"\n              ms={{\n                sm: \"16px\",\n              }}\n              my={{\n                sm: \"16px\",\n              }}\n              borderRadius=\"16px\"\n            >\n              <DrawerCloseButton\n                _focus={{ boxShadow: \"none\" }}\n                _hover={{ boxShadow: \"none\" }}\n              />\n              <DrawerBody maxW=\"250px\" px=\"1rem\">\n                <Box maxW=\"100%\" h=\"100vh\">\n                  <Box>{brand}</Box>\n                  <Stack direction=\"column\" mb=\"40px\">\n                    <Box>{links}</Box>\n                  </Stack>\n                  <SidebarHelp></SidebarHelp>\n                </Box>\n              </DrawerBody>\n            </DrawerContent>\n          </Drawer>\n        </>\n      </Box>\n    </Box>\n  );\n}\n// PROPS\n\nSidebar.propTypes = {\n  rtlActive: PropTypes.bool,\n  logoText: PropTypes.string,\n  routes: PropTypes.arrayOf(PropTypes.object),\n  variant: PropTypes.string,\n};\nSidebarResponsive.propTypes = {\n  rtlActive: PropTypes.bool,\n  logoText: PropTypes.string,\n  routes: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default Sidebar;\n"]},"metadata":{},"sourceType":"module"}