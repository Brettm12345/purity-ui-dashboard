{"ast":null,"code":"// chakra imports\nimport{Avatar,Flex,Text,useColorModeValue}from\"@chakra-ui/react\";import{ClockIcon}from\"components/Icons/Icons\";import React from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export function ItemContent(props){var navbarIcon=useColorModeValue(\"gray.500\",\"gray.200\");var notificationColor=useColorModeValue(\"gray.700\",\"white\");var rtlActive=props.rtlActive;var spacing=\" \";return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Avatar,{name:props.aName,src:props.aSrc,borderRadius:\"12px\",me:\"16px\"}),/*#__PURE__*/_jsxs(Flex,{flexDirection:\"column\",children:[/*#__PURE__*/_jsxs(Text,{fontSize:\"14px\",mb:\"5px\",color:notificationColor,children:[/*#__PURE__*/_jsxs(Text,{fontWeight:\"bold\",fontSize:\"14px\",as:\"span\",children:[props.boldInfo,spacing]}),props.info]}),/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",children:[/*#__PURE__*/_jsx(ClockIcon,{color:navbarIcon,w:\"13px\",h:\"13px\",me:\"3px\"}),/*#__PURE__*/_jsx(Text,{fontSize:\"xs\",lineHeight:\"100%\",color:navbarIcon,children:props.time})]})]})]});}","map":{"version":3,"sources":["/Users/vladmihalache/Documents/GitHub/purity-ui-dashboard-1/src/components/Menu/ItemContent.js"],"names":["Avatar","Flex","Text","useColorModeValue","ClockIcon","React","ItemContent","props","navbarIcon","notificationColor","rtlActive","spacing","aName","aSrc","boldInfo","info","time"],"mappings":"AAAA;AACA,OAASA,MAAT,CAAiBC,IAAjB,CAAuBC,IAAvB,CAA6BC,iBAA7B,KAAsD,kBAAtD,CACA,OAASC,SAAT,KAA0B,wBAA1B,CAEA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,6IAEA,MAAO,SAASC,CAAAA,WAAT,CAAqBC,KAArB,CAA4B,CACjC,GAAMC,CAAAA,UAAU,CAAGL,iBAAiB,CAAC,UAAD,CAAa,UAAb,CAApC,CACA,GAAMM,CAAAA,iBAAiB,CAAGN,iBAAiB,CAAC,UAAD,CAAa,OAAb,CAA3C,CACA,GAAQO,CAAAA,SAAR,CAAsBH,KAAtB,CAAQG,SAAR,CACA,GAAMC,CAAAA,OAAO,CAAG,GAAhB,CACA,mBACE,wCACE,KAAC,MAAD,EACE,IAAI,CAAEJ,KAAK,CAACK,KADd,CAEE,GAAG,CAAEL,KAAK,CAACM,IAFb,CAGE,YAAY,CAAC,MAHf,CAIE,EAAE,CAAC,MAJL,EADF,cAOE,MAAC,IAAD,EAAM,aAAa,CAAC,QAApB,wBACE,MAAC,IAAD,EAAM,QAAQ,CAAC,MAAf,CAAsB,EAAE,CAAC,KAAzB,CAA+B,KAAK,CAAEJ,iBAAtC,wBACE,MAAC,IAAD,EAAM,UAAU,CAAC,MAAjB,CAAwB,QAAQ,CAAC,MAAjC,CAAwC,EAAE,CAAC,MAA3C,WACGF,KAAK,CAACO,QADT,CAEGH,OAFH,GADF,CAKGJ,KAAK,CAACQ,IALT,GADF,cAQE,MAAC,IAAD,EAAM,UAAU,CAAC,QAAjB,wBACE,KAAC,SAAD,EAAW,KAAK,CAAEP,UAAlB,CAA8B,CAAC,CAAC,MAAhC,CAAuC,CAAC,CAAC,MAAzC,CAAgD,EAAE,CAAC,KAAnD,EADF,cAEE,KAAC,IAAD,EAAM,QAAQ,CAAC,IAAf,CAAoB,UAAU,CAAC,MAA/B,CAAsC,KAAK,CAAEA,UAA7C,UACGD,KAAK,CAACS,IADT,EAFF,GARF,GAPF,GADF,CAyBD","sourcesContent":["// chakra imports\nimport { Avatar, Flex, Text, useColorModeValue } from \"@chakra-ui/react\";\nimport { ClockIcon } from \"components/Icons/Icons\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nexport function ItemContent(props) {\n  const navbarIcon = useColorModeValue(\"gray.500\", \"gray.200\");\n  const notificationColor = useColorModeValue(\"gray.700\", \"white\");\n  const { rtlActive } = props;\n  const spacing = \" \";\n  return (\n    <>\n      <Avatar\n        name={props.aName}\n        src={props.aSrc}\n        borderRadius=\"12px\"\n        me=\"16px\"\n      />\n      <Flex flexDirection=\"column\">\n        <Text fontSize=\"14px\" mb=\"5px\" color={notificationColor}>\n          <Text fontWeight=\"bold\" fontSize=\"14px\" as=\"span\">\n            {props.boldInfo}\n            {spacing}\n          </Text>\n          {props.info}\n        </Text>\n        <Flex alignItems=\"center\">\n          <ClockIcon color={navbarIcon} w=\"13px\" h=\"13px\" me=\"3px\" />\n          <Text fontSize=\"xs\" lineHeight=\"100%\" color={navbarIcon}>\n            {props.time}\n          </Text>\n        </Flex>\n      </Flex>\n    </>\n  );\n}\n\nItemContent.propTypes = {\n  rtlActive: PropTypes.bool,\n};\n"]},"metadata":{},"sourceType":"module"}