{"ast":null,"code":"import _objectWithoutProperties from\"/Users/vladmihalache/Documents/GitHub/purity-ui-dashboard-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _slicedToArray from\"/Users/vladmihalache/Documents/GitHub/purity-ui-dashboard-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";var _excluded=[\"rtlActive\",\"variant\",\"children\",\"fixed\",\"secondary\",\"brandText\",\"onOpen\"];// Chakra Imports\nimport{Box,Breadcrumb,BreadcrumbItem,BreadcrumbLink,Flex,Link,useColorModeValue}from\"@chakra-ui/react\";import React,{useState}from\"react\";import AdminNavbarLinks from\"./AdminNavbarLinks\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function AdminNavbar(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),scrolled=_useState2[0],setScrolled=_useState2[1];var rtlActive=props.rtlActive,variant=props.variant,children=props.children,fixed=props.fixed,secondary=props.secondary,brandText=props.brandText,onOpen=props.onOpen,rest=_objectWithoutProperties(props,_excluded);// Here are all the props that may change depending on navbar's type or state.(secondary, variant, scrolled)\nvar mainText=useColorModeValue(\"gray.700\",\"gray.200\");var secondaryText=useColorModeValue(\"gray.400\",\"gray.200\");var navbarPosition=\"absolute\";var navbarFilter=\"none\";var navbarBackdrop=\"blur(21px)\";var navbarShadow=\"none\";var navbarBg=\"none\";var navbarBorder=\"transparent\";var secondaryMargin=\"0px\";var paddingX=\"15px\";if(props.fixed===true)if(scrolled===true){navbarPosition=\"fixed\";navbarShadow=useColorModeValue(\"0px 7px 23px rgba(0, 0, 0, 0.05)\",\"none\");navbarBg=useColorModeValue(\"linear-gradient(112.83deg, rgba(255, 255, 255, 0.82) 0%, rgba(255, 255, 255, 0.8) 110.84%)\",\"linear-gradient(112.83deg, rgba(255, 255, 255, 0.21) 0%, rgba(255, 255, 255, 0) 110.84%)\");navbarBorder=useColorModeValue(\"#FFFFFF\",\"rgba(255, 255, 255, 0.31)\");navbarFilter=useColorModeValue(\"none\",\"drop-shadow(0px 7px 23px rgba(0, 0, 0, 0.05))\");}if(props.secondary){navbarBackdrop=\"none\";navbarPosition=\"absolute\";mainText=\"white\";secondaryText=\"white\";secondaryMargin=\"22px\";paddingX=\"30px\";}var changeNavbar=function changeNavbar(){if(window.scrollY>1){setScrolled(true);}else{setScrolled(false);}};window.addEventListener(\"scroll\",changeNavbar);return/*#__PURE__*/_jsx(Flex,{position:navbarPosition,boxShadow:navbarShadow,bg:navbarBg,borderColor:navbarBorder,filter:navbarFilter,backdropFilter:navbarBackdrop,borderWidth:\"1.5px\",borderStyle:\"solid\",transitionDelay:\"0s, 0s, 0s, 0s\",transitionDuration:\" 0.25s, 0.25s, 0.25s, 0s\",\"transition-property\":\"box-shadow, background-color, filter, border\",transitionTimingFunction:\"linear, linear, linear, linear\",alignItems:{xl:\"center\"},borderRadius:\"16px\",display:\"flex\",minH:\"75px\",justifyContent:{xl:\"center\"},lineHeight:\"25.6px\",mx:\"auto\",mt:secondaryMargin,pb:\"8px\",right:{sm:\"15px\",xl:\"30px\"},px:{sm:paddingX,md:\"30px\"},paddingTop:\"8px\",top:\"18px\",w:{sm:\"calc(100vw - 30px)\",xl:\"calc(100vw - 75px - 275px)\"},children:/*#__PURE__*/_jsxs(Flex,{w:\"100%\",flexDirection:{sm:\"column\",md:\"row\"},alignItems:{xl:\"center\"},children:[/*#__PURE__*/_jsxs(Box,{mb:{sm:\"8px\",md:\"0px\"},children:[/*#__PURE__*/_jsxs(Breadcrumb,{children:[/*#__PURE__*/_jsx(BreadcrumbItem,{color:mainText,children:/*#__PURE__*/_jsx(BreadcrumbLink,{href:\"#\",color:secondaryText,children:\"Pages\"})}),/*#__PURE__*/_jsx(BreadcrumbItem,{color:mainText,children:/*#__PURE__*/_jsx(BreadcrumbLink,{href:\"#\",color:mainText,children:brandText})})]}),/*#__PURE__*/_jsx(Link,{color:mainText,href:\"#\",bg:\"inherit\",borderRadius:\"inherit\",fontWeight:\"bold\",_hover:{color:{mainText:mainText}},_active:{bg:\"inherit\",transform:\"none\",borderColor:\"transparent\"},_focus:{boxShadow:\"none\"},children:brandText})]}),/*#__PURE__*/_jsx(Box,{ms:\"auto\",w:{sm:\"100%\",md:\"unset\"},children:/*#__PURE__*/_jsx(AdminNavbarLinks,{onOpen:props.onOpen,rtlActive:rtlActive,logoText:props.logoText,secondary:props.secondary,fixed:props.fixed})})]})});}","map":{"version":3,"sources":["/Users/vladmihalache/Documents/GitHub/purity-ui-dashboard-1/src/components/Navbars/AdminNavbar.js"],"names":["Box","Breadcrumb","BreadcrumbItem","BreadcrumbLink","Flex","Link","useColorModeValue","React","useState","AdminNavbarLinks","AdminNavbar","props","scrolled","setScrolled","rtlActive","variant","children","fixed","secondary","brandText","onOpen","rest","mainText","secondaryText","navbarPosition","navbarFilter","navbarBackdrop","navbarShadow","navbarBg","navbarBorder","secondaryMargin","paddingX","changeNavbar","window","scrollY","addEventListener","xl","sm","md","color","bg","transform","borderColor","boxShadow","logoText"],"mappings":"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","sourcesContent":["// Chakra Imports\nimport {\n  Box,\n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  Flex,\n  Link,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport PropTypes from \"prop-types\";\nimport React, { useState } from \"react\";\nimport AdminNavbarLinks from \"./AdminNavbarLinks\";\n\nexport default function AdminNavbar(props) {\n  const [scrolled, setScrolled] = useState(false);\n  const {\n    rtlActive,\n    variant,\n    children,\n    fixed,\n    secondary,\n    brandText,\n    onOpen,\n    ...rest\n  } = props;\n\n  // Here are all the props that may change depending on navbar's type or state.(secondary, variant, scrolled)\n  let mainText = useColorModeValue(\"gray.700\", \"gray.200\");\n  let secondaryText = useColorModeValue(\"gray.400\", \"gray.200\");\n  let navbarPosition = \"absolute\";\n  let navbarFilter = \"none\";\n  let navbarBackdrop = \"blur(21px)\";\n  let navbarShadow = \"none\";\n  let navbarBg = \"none\";\n  let navbarBorder = \"transparent\";\n  let secondaryMargin = \"0px\";\n  let paddingX = \"15px\";\n  if (props.fixed === true)\n    if (scrolled === true) {\n      navbarPosition = \"fixed\";\n      navbarShadow = useColorModeValue(\n        \"0px 7px 23px rgba(0, 0, 0, 0.05)\",\n        \"none\"\n      );\n      navbarBg = useColorModeValue(\n        \"linear-gradient(112.83deg, rgba(255, 255, 255, 0.82) 0%, rgba(255, 255, 255, 0.8) 110.84%)\",\n        \"linear-gradient(112.83deg, rgba(255, 255, 255, 0.21) 0%, rgba(255, 255, 255, 0) 110.84%)\"\n      );\n      navbarBorder = useColorModeValue(\"#FFFFFF\", \"rgba(255, 255, 255, 0.31)\");\n      navbarFilter = useColorModeValue(\n        \"none\",\n        \"drop-shadow(0px 7px 23px rgba(0, 0, 0, 0.05))\"\n      );\n    }\n  if (props.secondary) {\n    navbarBackdrop = \"none\";\n    navbarPosition = \"absolute\";\n    mainText = \"white\";\n    secondaryText = \"white\";\n    secondaryMargin = \"22px\";\n    paddingX = \"30px\";\n  }\n  const changeNavbar = () => {\n    if (window.scrollY > 1) {\n      setScrolled(true);\n    } else {\n      setScrolled(false);\n    }\n  };\n  window.addEventListener(\"scroll\", changeNavbar);\n  return (\n    <Flex\n      position={navbarPosition}\n      boxShadow={navbarShadow}\n      bg={navbarBg}\n      borderColor={navbarBorder}\n      filter={navbarFilter}\n      backdropFilter={navbarBackdrop}\n      borderWidth=\"1.5px\"\n      borderStyle=\"solid\"\n      transitionDelay=\"0s, 0s, 0s, 0s\"\n      transitionDuration=\" 0.25s, 0.25s, 0.25s, 0s\"\n      transition-property=\"box-shadow, background-color, filter, border\"\n      transitionTimingFunction=\"linear, linear, linear, linear\"\n      alignItems={{ xl: \"center\" }}\n      borderRadius=\"16px\"\n      display=\"flex\"\n      minH=\"75px\"\n      justifyContent={{ xl: \"center\" }}\n      lineHeight=\"25.6px\"\n      mx=\"auto\"\n      mt={secondaryMargin}\n      pb=\"8px\"\n      right={{ sm: \"15px\", xl: \"30px\" }}\n      px={{\n        sm: paddingX,\n        md: \"30px\",\n      }}\n      paddingTop=\"8px\"\n      top=\"18px\"\n      w={{ sm: \"calc(100vw - 30px)\", xl: \"calc(100vw - 75px - 275px)\" }}\n    >\n      <Flex\n        w=\"100%\"\n        flexDirection={{\n          sm: \"column\",\n          md: \"row\",\n        }}\n        alignItems={{ xl: \"center\" }}\n      >\n        <Box mb={{ sm: \"8px\", md: \"0px\" }}>\n          <Breadcrumb>\n            <BreadcrumbItem color={mainText}>\n              <BreadcrumbLink href=\"#\" color={secondaryText}>\n                Pages\n              </BreadcrumbLink>\n            </BreadcrumbItem>\n\n            <BreadcrumbItem color={mainText}>\n              <BreadcrumbLink href=\"#\" color={mainText}>\n                {brandText}\n              </BreadcrumbLink>\n            </BreadcrumbItem>\n          </Breadcrumb>\n          {/* Here we create navbar brand, based on route name */}\n          <Link\n            color={mainText}\n            href=\"#\"\n            bg=\"inherit\"\n            borderRadius=\"inherit\"\n            fontWeight=\"bold\"\n            _hover={{ color: { mainText } }}\n            _active={{\n              bg: \"inherit\",\n              transform: \"none\",\n              borderColor: \"transparent\",\n            }}\n            _focus={{\n              boxShadow: \"none\",\n            }}\n          >\n            {brandText}\n          </Link>\n        </Box>\n        <Box ms=\"auto\" w={{ sm: \"100%\", md: \"unset\" }}>\n          <AdminNavbarLinks\n            onOpen={props.onOpen}\n            rtlActive={rtlActive}\n            logoText={props.logoText}\n            secondary={props.secondary}\n            fixed={props.fixed}\n          />\n        </Box>\n      </Flex>\n    </Flex>\n  );\n}\n\nAdminNavbar.propTypes = {\n  rtlActive: PropTypes.bool,\n  brandText: PropTypes.string,\n  variant: PropTypes.string,\n  secondary: PropTypes.bool,\n  fixed: PropTypes.bool,\n  onOpen: PropTypes.func,\n};\n"]},"metadata":{},"sourceType":"module"}