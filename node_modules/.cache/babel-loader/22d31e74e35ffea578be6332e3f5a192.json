{"ast":null,"code":"var _jsxFileName = \"/Users/vladmihalache/Documents/GitHub/purity-ui-dashboard-1/src/layouts/Auth.js\",\n    _s = $RefreshSig$();\n\n// chakra imports\nimport { Box, ChakraProvider, Portal } from \"@chakra-ui/react\";\nimport Footer from \"components/Footer/Footer.js\"; // core components\n\nimport AuthNavbar from \"components/Navbars/AuthNavbar.js\";\nimport React from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport routes from \"routes.js\";\nimport theme from \"theme/theme.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Pages(props) {\n  _s();\n\n  var _this = this;\n\n  var rest = Object.assign({}, props); // ref for the wrapper div\n\n  var wrapper = /*#__PURE__*/React.createRef();\n  React.useEffect(function () {\n    document.body.style.overflow = \"unset\"; // Specify how to clean up after this effect:\n\n    return function cleanup() {};\n  });\n\n  var getActiveRoute = function getActiveRoute(routes) {\n    var activeRoute = \"Default Brand Text\";\n\n    for (var i = 0; i < routes.length; i++) {\n      if (routes[i].collapse) {\n        var collapseActiveRoute = getActiveRoute(routes[i].views);\n\n        if (collapseActiveRoute !== activeRoute) {\n          return collapseActiveRoute;\n        }\n      } else if (routes[i].category) {\n        var categoryActiveRoute = getActiveRoute(routes[i].views);\n\n        if (categoryActiveRoute !== activeRoute) {\n          return categoryActiveRoute;\n        }\n      } else {\n        if (window.location.href.indexOf(routes[i].layout + routes[i].path) !== -1) {\n          return routes[i].name;\n        }\n      }\n    }\n\n    return activeRoute;\n  };\n\n  var getActiveNavbar = function getActiveNavbar(routes) {\n    var activeNavbar = false;\n\n    for (var i = 0; i < routes.length; i++) {\n      if (routes[i].category) {\n        var categoryActiveNavbar = getActiveNavbar(routes[i].views);\n\n        if (categoryActiveNavbar !== activeNavbar) {\n          return categoryActiveNavbar;\n        }\n      } else {\n        if (window.location.href.indexOf(routes[i].layout + routes[i].path) !== -1) {\n          if (routes[i].secondaryNavbar) {\n            return routes[i].secondaryNavbar;\n          }\n        }\n      }\n    }\n\n    return activeNavbar;\n  };\n\n  var getRoutes = function getRoutes(routes) {\n    return routes.map(function (prop, key) {\n      if (prop.collapse) {\n        return getRoutes(prop.views);\n      }\n\n      if (prop.category === \"account\") {\n        return getRoutes(prop.views);\n      }\n\n      if (prop.layout === \"/auth\") {\n        return /*#__PURE__*/_jsxDEV(Route, {\n          path: prop.layout + prop.path,\n          component: prop.component\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, _this);\n      } else {\n        return null;\n      }\n    });\n  };\n\n  var navRef = React.useRef();\n  return /*#__PURE__*/_jsxDEV(ChakraProvider, {\n    theme: theme,\n    resetCss: false,\n    w: \"100%\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      ref: navRef,\n      w: \"100%\",\n      children: [/*#__PURE__*/_jsxDEV(Portal, {\n        containerRef: navRef,\n        children: /*#__PURE__*/_jsxDEV(AuthNavbar, {\n          secondary: getActiveNavbar(routes),\n          logoText: \"DASHBOARD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        w: \"100%\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          ref: wrapper,\n          w: \"100%\",\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            children: [getRoutes(routes), /*#__PURE__*/_jsxDEV(Redirect, {\n              from: \"/auth\",\n              to: \"/auth/login-page\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        px: \"24px\",\n        mx: \"auto\",\n        width: \"1044px\",\n        maxW: \"100%\",\n        children: /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Pages, \"b4EONrg5WKEJVR9K5rGmwlomVMk=\");\n\n_c = Pages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pages\");","map":{"version":3,"sources":["/Users/vladmihalache/Documents/GitHub/purity-ui-dashboard-1/src/layouts/Auth.js"],"names":["Box","ChakraProvider","Portal","Footer","AuthNavbar","React","Redirect","Route","Switch","routes","theme","Pages","props","rest","wrapper","createRef","useEffect","document","body","style","overflow","cleanup","getActiveRoute","activeRoute","i","length","collapse","collapseActiveRoute","views","category","categoryActiveRoute","window","location","href","indexOf","layout","path","name","getActiveNavbar","activeNavbar","categoryActiveNavbar","secondaryNavbar","getRoutes","map","prop","key","component","navRef","useRef"],"mappings":"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","sourcesContent":["// chakra imports\nimport { Box, ChakraProvider, Portal } from \"@chakra-ui/react\";\nimport Footer from \"components/Footer/Footer.js\";\n// core components\nimport AuthNavbar from \"components/Navbars/AuthNavbar.js\";\nimport React from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport routes from \"routes.js\";\nimport theme from \"theme/theme.js\";\n\nexport default function Pages(props) {\n  const { ...rest } = props;\n  // ref for the wrapper div\n  const wrapper = React.createRef();\n  React.useEffect(() => {\n    document.body.style.overflow = \"unset\";\n    // Specify how to clean up after this effect:\n    return function cleanup() {};\n  });\n  const getActiveRoute = (routes) => {\n    let activeRoute = \"Default Brand Text\";\n    for (let i = 0; i < routes.length; i++) {\n      if (routes[i].collapse) {\n        let collapseActiveRoute = getActiveRoute(routes[i].views);\n        if (collapseActiveRoute !== activeRoute) {\n          return collapseActiveRoute;\n        }\n      } else if (routes[i].category) {\n        let categoryActiveRoute = getActiveRoute(routes[i].views);\n        if (categoryActiveRoute !== activeRoute) {\n          return categoryActiveRoute;\n        }\n      } else {\n        if (\n          window.location.href.indexOf(routes[i].layout + routes[i].path) !== -1\n        ) {\n          return routes[i].name;\n        }\n      }\n    }\n    return activeRoute;\n  };\n  const getActiveNavbar = (routes) => {\n    let activeNavbar = false;\n    for (let i = 0; i < routes.length; i++) {\n      if (routes[i].category) {\n        let categoryActiveNavbar = getActiveNavbar(routes[i].views);\n        if (categoryActiveNavbar !== activeNavbar) {\n          return categoryActiveNavbar;\n        }\n      } else {\n        if (\n          window.location.href.indexOf(routes[i].layout + routes[i].path) !== -1\n        ) {\n          if (routes[i].secondaryNavbar) {\n            return routes[i].secondaryNavbar;\n          }\n        }\n      }\n    }\n    return activeNavbar;\n  };\n  const getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.collapse) {\n        return getRoutes(prop.views);\n      }\n      if (prop.category === \"account\") {\n        return getRoutes(prop.views);\n      }\n      if (prop.layout === \"/auth\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  const navRef = React.useRef();\n  return (\n    <ChakraProvider theme={theme} resetCss={false} w=\"100%\">\n      <Box ref={navRef} w=\"100%\">\n        <Portal containerRef={navRef}>\n          <AuthNavbar\n            secondary={getActiveNavbar(routes)}\n            logoText=\"DASHBOARD\"\n          />\n        </Portal>\n        <Box w=\"100%\">\n          <Box ref={wrapper} w=\"100%\">\n            <Switch>\n              {getRoutes(routes)}\n              <Redirect from=\"/auth\" to=\"/auth/login-page\" />\n            </Switch>\n          </Box>\n        </Box>\n        <Box px=\"24px\" mx=\"auto\" width=\"1044px\" maxW=\"100%\">\n          <Footer />\n        </Box>\n      </Box>\n    </ChakraProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}