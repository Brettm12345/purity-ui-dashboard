{"ast":null,"code":"import _objectWithoutProperties from\"/Users/vladmihalache/Documents/GitHub/purity-ui-dashboard-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";var _excluded=[\"rtlActive\",\"secondary\",\"onChange\",\"onSwitch\",\"fixed\"];// Chakra Imports\nimport{Button,useColorModeValue}from\"@chakra-ui/react\";// Custom Icons\nimport{SettingsIcon}from\"components/Icons/Icons\";import React from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function FixedPlugin(props){var rtlActive=props.rtlActive,secondary=props.secondary,onChange=props.onChange,onSwitch=props.onSwitch,fixed=props.fixed,rest=_objectWithoutProperties(props,_excluded);// Chakra Color Mode\nvar navbarIcon=useColorModeValue(\"gray.500\",\"gray.200\");var bgButton=useColorModeValue(\"white\",\"gray.600\");var fixedDisplay=\"flex\";if(props.secondary){fixedDisplay=\"none\";}var settingsRef=React.useRef();return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Button,{h:\"52px\",w:\"52px\",onClick:props.onOpen,bg:bgButton,position:\"fixed\",variant:\"no-hover\",right:\"35px\",bottom:\"30px\",borderRadius:\"50px\",boxShadow:\"0 2px 12px 0 rgb(0 0 0 / 16%)\",children:/*#__PURE__*/_jsx(SettingsIcon,{cursor:\"pointer\",ref:settingsRef,color:navbarIcon,w:\"20px\",h:\"20px\"})})});}","map":{"version":3,"sources":["/Users/vladmihalache/Documents/GitHub/purity-ui-dashboard-1/src/components/FixedPlugin/FixedPlugin.js"],"names":["Button","useColorModeValue","SettingsIcon","React","FixedPlugin","props","rtlActive","secondary","onChange","onSwitch","fixed","rest","navbarIcon","bgButton","fixedDisplay","settingsRef","useRef","onOpen"],"mappings":"4QAAA;AACA,OAASA,MAAT,CAAiBC,iBAAjB,KAA0C,kBAA1C,CACA;AACA,OAASC,YAAT,KAA6B,wBAA7B,CAEA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,gGAEA,cAAe,SAASC,CAAAA,WAAT,CAAqBC,KAArB,CAA4B,CACzC,GAAQC,CAAAA,SAAR,CAAqED,KAArE,CAAQC,SAAR,CAAmBC,SAAnB,CAAqEF,KAArE,CAAmBE,SAAnB,CAA8BC,QAA9B,CAAqEH,KAArE,CAA8BG,QAA9B,CAAwCC,QAAxC,CAAqEJ,KAArE,CAAwCI,QAAxC,CAAkDC,KAAlD,CAAqEL,KAArE,CAAkDK,KAAlD,CAA4DC,IAA5D,0BAAqEN,KAArE,YACA;AACA,GAAIO,CAAAA,UAAU,CAAGX,iBAAiB,CAAC,UAAD,CAAa,UAAb,CAAlC,CACA,GAAIY,CAAAA,QAAQ,CAAGZ,iBAAiB,CAAC,OAAD,CAAU,UAAV,CAAhC,CACA,GAAIa,CAAAA,YAAY,CAAG,MAAnB,CACA,GAAIT,KAAK,CAACE,SAAV,CAAqB,CACnBO,YAAY,CAAG,MAAf,CACD,CAED,GAAMC,CAAAA,WAAW,CAAGZ,KAAK,CAACa,MAAN,EAApB,CACA,mBACE,sCACE,KAAC,MAAD,EACE,CAAC,CAAC,MADJ,CAEE,CAAC,CAAC,MAFJ,CAGE,OAAO,CAAEX,KAAK,CAACY,MAHjB,CAIE,EAAE,CAAEJ,QAJN,CAKE,QAAQ,CAAC,OALX,CAME,OAAO,CAAC,UANV,CAOE,KAAK,CAAC,MAPR,CAQE,MAAM,CAAC,MART,CASE,YAAY,CAAC,MATf,CAUE,SAAS,CAAC,+BAVZ,uBAYE,KAAC,YAAD,EACE,MAAM,CAAC,SADT,CAEE,GAAG,CAAEE,WAFP,CAGE,KAAK,CAAEH,UAHT,CAIE,CAAC,CAAC,MAJJ,CAKE,CAAC,CAAC,MALJ,EAZF,EADF,EADF,CAwBD","sourcesContent":["// Chakra Imports\nimport { Button, useColorModeValue } from \"@chakra-ui/react\";\n// Custom Icons\nimport { SettingsIcon } from \"components/Icons/Icons\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nexport default function FixedPlugin(props) {\n  const { rtlActive, secondary, onChange, onSwitch, fixed, ...rest } = props;\n  // Chakra Color Mode\n  let navbarIcon = useColorModeValue(\"gray.500\", \"gray.200\");\n  let bgButton = useColorModeValue(\"white\", \"gray.600\");\n  let fixedDisplay = \"flex\";\n  if (props.secondary) {\n    fixedDisplay = \"none\";\n  }\n\n  const settingsRef = React.useRef();\n  return (\n    <>\n      <Button\n        h=\"52px\"\n        w=\"52px\"\n        onClick={props.onOpen}\n        bg={bgButton}\n        position=\"fixed\"\n        variant=\"no-hover\"\n        right=\"35px\"\n        bottom=\"30px\"\n        borderRadius=\"50px\"\n        boxShadow=\"0 2px 12px 0 rgb(0 0 0 / 16%)\"\n      >\n        <SettingsIcon\n          cursor=\"pointer\"\n          ref={settingsRef}\n          color={navbarIcon}\n          w=\"20px\"\n          h=\"20px\"\n        />\n      </Button>\n    </>\n  );\n}\n\nFixedPlugin.propTypes = {\n  rtlActive: PropTypes.bool,\n  fixed: PropTypes.bool,\n  onChange: PropTypes.func,\n  onSwitch: PropTypes.func,\n};\n"]},"metadata":{},"sourceType":"module"}