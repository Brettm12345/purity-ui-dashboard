{"ast":null,"code":"// chakra imports\nimport{Box,ChakraProvider,Portal}from\"@chakra-ui/react\";import Footer from\"components/Footer/Footer.js\";// core components\nimport AuthNavbar from\"components/Navbars/AuthNavbar.js\";import React from\"react\";import{Redirect,Route,Switch}from\"react-router-dom\";import routes from\"routes.js\";import theme from\"theme/theme.js\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Pages(props){var rest=Object.assign({},props);// ref for the wrapper div\nvar wrapper=/*#__PURE__*/React.createRef();React.useEffect(function(){document.body.style.overflow=\"unset\";// Specify how to clean up after this effect:\nreturn function cleanup(){};});var getActiveRoute=function getActiveRoute(routes){var activeRoute=\"Default Brand Text\";for(var i=0;i<routes.length;i++){if(routes[i].collapse){var collapseActiveRoute=getActiveRoute(routes[i].views);if(collapseActiveRoute!==activeRoute){return collapseActiveRoute;}}else if(routes[i].category){var categoryActiveRoute=getActiveRoute(routes[i].views);if(categoryActiveRoute!==activeRoute){return categoryActiveRoute;}}else{if(window.location.href.indexOf(routes[i].layout+routes[i].path)!==-1){return routes[i].name;}}}return activeRoute;};var getActiveNavbar=function getActiveNavbar(routes){var activeNavbar=false;for(var i=0;i<routes.length;i++){if(routes[i].category){var categoryActiveNavbar=getActiveNavbar(routes[i].views);if(categoryActiveNavbar!==activeNavbar){return categoryActiveNavbar;}}else{if(window.location.href.indexOf(routes[i].layout+routes[i].path)!==-1){if(routes[i].secondaryNavbar){return routes[i].secondaryNavbar;}}}}return activeNavbar;};var getRoutes=function getRoutes(routes){return routes.map(function(prop,key){if(prop.collapse){return getRoutes(prop.views);}if(prop.category===\"account\"){return getRoutes(prop.views);}if(prop.layout===\"/auth\"){return/*#__PURE__*/_jsx(Route,{path:prop.layout+prop.path,component:prop.component},key);}else{return null;}});};var navRef=React.useRef();return/*#__PURE__*/_jsx(ChakraProvider,{theme:theme,resetCss:false,w:\"100%\",children:/*#__PURE__*/_jsxs(Box,{ref:navRef,w:\"100%\",children:[/*#__PURE__*/_jsx(Portal,{containerRef:navRef,children:/*#__PURE__*/_jsx(AuthNavbar,{secondary:getActiveNavbar(routes),logoText:\"PURITY UI DASHBOARD\"})}),/*#__PURE__*/_jsx(Box,{w:\"100%\",children:/*#__PURE__*/_jsx(Box,{ref:wrapper,w:\"100%\",children:/*#__PURE__*/_jsxs(Switch,{children:[getRoutes(routes),/*#__PURE__*/_jsx(Redirect,{from:\"/auth\",to:\"/auth/login-page\"})]})})}),/*#__PURE__*/_jsx(Box,{px:\"24px\",mx:\"auto\",width:\"1044px\",maxW:\"100%\",children:/*#__PURE__*/_jsx(Footer,{})})]})});}","map":{"version":3,"sources":["/Users/vladmihalache/Documents/GitHub/purity-ui-dashboard-1/src/layouts/Auth.js"],"names":["Box","ChakraProvider","Portal","Footer","AuthNavbar","React","Redirect","Route","Switch","routes","theme","Pages","props","rest","wrapper","createRef","useEffect","document","body","style","overflow","cleanup","getActiveRoute","activeRoute","i","length","collapse","collapseActiveRoute","views","category","categoryActiveRoute","window","location","href","indexOf","layout","path","name","getActiveNavbar","activeNavbar","categoryActiveNavbar","secondaryNavbar","getRoutes","map","prop","key","component","navRef","useRef"],"mappings":"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","sourcesContent":["// chakra imports\nimport { Box, ChakraProvider, Portal } from \"@chakra-ui/react\";\nimport Footer from \"components/Footer/Footer.js\";\n// core components\nimport AuthNavbar from \"components/Navbars/AuthNavbar.js\";\nimport React from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport routes from \"routes.js\";\nimport theme from \"theme/theme.js\";\n\nexport default function Pages(props) {\n  const { ...rest } = props;\n  // ref for the wrapper div\n  const wrapper = React.createRef();\n  React.useEffect(() => {\n    document.body.style.overflow = \"unset\";\n    // Specify how to clean up after this effect:\n    return function cleanup() {};\n  });\n  const getActiveRoute = (routes) => {\n    let activeRoute = \"Default Brand Text\";\n    for (let i = 0; i < routes.length; i++) {\n      if (routes[i].collapse) {\n        let collapseActiveRoute = getActiveRoute(routes[i].views);\n        if (collapseActiveRoute !== activeRoute) {\n          return collapseActiveRoute;\n        }\n      } else if (routes[i].category) {\n        let categoryActiveRoute = getActiveRoute(routes[i].views);\n        if (categoryActiveRoute !== activeRoute) {\n          return categoryActiveRoute;\n        }\n      } else {\n        if (\n          window.location.href.indexOf(routes[i].layout + routes[i].path) !== -1\n        ) {\n          return routes[i].name;\n        }\n      }\n    }\n    return activeRoute;\n  };\n  const getActiveNavbar = (routes) => {\n    let activeNavbar = false;\n    for (let i = 0; i < routes.length; i++) {\n      if (routes[i].category) {\n        let categoryActiveNavbar = getActiveNavbar(routes[i].views);\n        if (categoryActiveNavbar !== activeNavbar) {\n          return categoryActiveNavbar;\n        }\n      } else {\n        if (\n          window.location.href.indexOf(routes[i].layout + routes[i].path) !== -1\n        ) {\n          if (routes[i].secondaryNavbar) {\n            return routes[i].secondaryNavbar;\n          }\n        }\n      }\n    }\n    return activeNavbar;\n  };\n  const getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.collapse) {\n        return getRoutes(prop.views);\n      }\n      if (prop.category === \"account\") {\n        return getRoutes(prop.views);\n      }\n      if (prop.layout === \"/auth\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  const navRef = React.useRef();\n  return (\n    <ChakraProvider theme={theme} resetCss={false} w=\"100%\">\n      <Box ref={navRef} w=\"100%\">\n        <Portal containerRef={navRef}>\n          <AuthNavbar\n            secondary={getActiveNavbar(routes)}\n            logoText=\"PURITY UI DASHBOARD\"\n          />\n        </Portal>\n        <Box w=\"100%\">\n          <Box ref={wrapper} w=\"100%\">\n            <Switch>\n              {getRoutes(routes)}\n              <Redirect from=\"/auth\" to=\"/auth/login-page\" />\n            </Switch>\n          </Box>\n        </Box>\n        <Box px=\"24px\" mx=\"auto\" width=\"1044px\" maxW=\"100%\">\n          <Footer />\n        </Box>\n      </Box>\n    </ChakraProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}